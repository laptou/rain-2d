<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Ibinimator"
    xmlns:view="clr-namespace:Ibinimator.View"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Ibinimator.App"
             StartupUri="View/MainView.xaml">
    <Application.Resources>
        <!--#region Accents-->
        <!--#region Colors-->
        <Color x:Key="L1">#EBEBEB</Color>
        <Color x:Key="L2">#E5E5E5</Color>
        <Color x:Key="L3">#E0E0E0</Color>
        <Color x:Key="T1">#404040</Color>
        <Color x:Key="T2">#4B4B4B</Color>
        <!--green-->
        <Color x:Key="A1">#58D432</Color>
        <Color x:Key="A1-1/2">#9F58D432</Color>
        <!--blue-->
        <Color x:Key="A2">#5BC0EB</Color>
        <!--yellow-->
        <Color x:Key="A3">#EAC435</Color>
        <!--orange-->
        <Color x:Key="A4">#FA7921</Color>
        <!--red-->
        <Color x:Key="A5">#E2302D</Color>
        <!--#endregion-->

        <!--#region Brushes-->
        <SolidColorBrush x:Key="L1Brush" Color="{StaticResource L1}" />
        <SolidColorBrush x:Key="L2Brush" Color="{StaticResource L2}" />
        <SolidColorBrush x:Key="L3Brush" Color="{StaticResource L3}" />
        <SolidColorBrush x:Key="T1Brush" Color="{StaticResource T1}" />
        <SolidColorBrush x:Key="T2Brush" Color="{StaticResource T2}" />
        <SolidColorBrush x:Key="A1Brush" Color="{StaticResource A1}" />
        <SolidColorBrush x:Key="A2Brush" Color="{StaticResource A2}" />
        <SolidColorBrush x:Key="A3Brush" Color="{StaticResource A3}" />
        <SolidColorBrush x:Key="A4Brush" Color="{StaticResource A4}" />
        <SolidColorBrush x:Key="A5Brush" Color="{StaticResource A5}" />
        <Style x:Key="Icon" TargetType="{x:Type Image}">
            <Setter Property="Height" Value="19.2" />
            <Setter Property="Width" Value="19.2" />
            <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>
        <!--#endregion-->
        <!--#endregion-->

        <!--#region Buttons-->
        <Style TargetType="{x:Type ButtonBase}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolbarButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Padding" Value="12" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0C000000" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#19000000" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#19000000" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="/Ibinimator;component/Resources/Font/#Roboto" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{StaticResource T2Brush}" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="Margin" Value="8" />
            <Setter Property="Height" Value="25.6" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{Binding (view:Helper.Accent)}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToolBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid x:Name="Grid" SnapsToDevicePixels="true">
                            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}"
                                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}"
                                              Background="#00000000" BorderBrush="{x:Null}" BorderThickness="0" ClipToBounds="True">
                                    <Image Source="/Ibinimator;component/Resources/Icon/expander.png" Style="{DynamicResource Icon}" />
                                </ToggleButton>
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
                                    <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                        <Border x:Name="ToolBarSubMenuBorder" Background="{DynamicResource L2Brush}" RenderOptions.ClearTypeHint="Enabled">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200" />
                                        </Border>
                                    </Themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" />
                                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Header" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true" />
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
                                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
                                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
                                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
            <Setter Property="BorderBrush" Value="{StaticResource A2Brush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="25.6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="12,0">
                            <Border x:Name="mainBorder"
                                    BorderBrush="{Binding Path=(view:Helper.Accent), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabPanel}}}"
                                    BorderThickness="0,0,0,1" Background="{TemplateBinding Background}" Margin="0" Cursor="Hand" Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Header}" Focusable="False"
                                                  HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top">
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0, 0, 0, 1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="TextBlock.FontWeight" Value="Bold" TargetName="contentPresenter" />
                                <Setter Property="TextElement.Foreground" Value="{Binding Path=(view:Helper.Accent), RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter Property="TextBlock.Foreground" Value="{Binding Path=(view:Helper.Accent), RelativeSource={RelativeSource TemplatedParent}}" TargetName="mainBorder" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="False">
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
            <Setter Property="Background" Value="{StaticResource L1Brush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="{DynamicResource L2Brush}" Grid.Column="0" IsItemsHost="true"
                                      Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Height="25.6" view:Helper.Accent="{TemplateBinding view:Helper.Accent}" />
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1" />
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1" />
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0" />
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>