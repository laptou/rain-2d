<Application
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:Ibinimator"
    xmlns:view="clr-namespace:Ibinimator.View"
    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    x:Class="Ibinimator.App"
    StartupUri="View/MainView.xaml">
    <Application.Resources>
        <!--#region Accents-->
        <!--#region Colors-->
        <Color x:Key="L1">#EBEBEB</Color>
        <Color x:Key="L2">#E5E5E5</Color>
        <Color x:Key="L3">#E0E0E0</Color>
        <Color x:Key="T1">#404040</Color>
        <Color x:Key="T2">#4B4B4B</Color>
        <!--green-->
        <Color x:Key="A1">#58D432</Color>
        <Color x:Key="A1-1/2">#9F58D432</Color>
        <!--blue-->
        <Color x:Key="A2">#5BC0EB</Color>
        <!--yellow-->
        <Color x:Key="A3">#EAC435</Color>
        <!--orange-->
        <Color x:Key="A4">#FA7921</Color>
        <!--red-->
        <Color x:Key="A5">#E2302D</Color>
        <!--#endregion-->

        <!--#region Brushes-->
        <SolidColorBrush x:Key="L1Brush" Color="{StaticResource L1}" />
        <SolidColorBrush x:Key="L2Brush" Color="{StaticResource L2}" />
        <SolidColorBrush x:Key="L3Brush" Color="{StaticResource L3}" />
        <SolidColorBrush x:Key="T1Brush" Color="{StaticResource T1}" />
        <SolidColorBrush x:Key="T2Brush" Color="{StaticResource T2}" />
        <SolidColorBrush x:Key="A1Brush" Color="{StaticResource A1}" />
        <SolidColorBrush x:Key="A2Brush" Color="{StaticResource A2}" />
        <SolidColorBrush x:Key="A3Brush" Color="{StaticResource A3}" />
        <SolidColorBrush x:Key="A4Brush" Color="{StaticResource A4}" />
        <SolidColorBrush x:Key="A5Brush" Color="{StaticResource A5}" />
        <Style x:Key="Icon" TargetType="{x:Type Image}">
            <Setter Property="Height" Value="19.2" />
            <Setter Property="Width" Value="19.2" />
            <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="UseLayoutRounding" Value="True" />
        </Style>
        <!--#endregion-->
        <!--#endregion-->

        <!--#region Buttons-->
        <Style TargetType="{x:Type ButtonBase}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolbarButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource {x:Type ButtonBase}}">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Height" Value="50" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Padding" Value="12" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0C000000" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#19000000" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" Value="#19000000" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.56" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="FontFamily" Value="/Ibinimator;component/Resources/Font/#Roboto" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{StaticResource T2Brush}" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="Margin" Value="8" />
            <Setter Property="Height" Value="25.6" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="SelectionBrush">
                <Setter.Value>
                    <SolidColorBrush
                        Color="{Binding Path=(view:Helper.Accent), RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}}" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border
                            x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="border" Value="0.56" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" TargetName="border">
                                    <Setter.Value>
                                        <LinearGradientBrush Opacity="0.5" EndPoint="0,1">
                                            <GradientStop />
                                            <GradientStop Offset="0.75" />
                                            <GradientStop Color="{Binding (view:Helper.Accent), ElementName=border}"
                                                          Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="border">
                                    <Setter.Value>
                                        <SolidColorBrush
                                            Color="{Binding Path=(view:Helper.Accent), ElementName=border}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="FontFamily" Value="/Ibinimator;component/Resources/Font/#Roboto" />
            <Setter Property="Background" Value="{StaticResource L3Brush}" />
            <Setter Property="BorderBrush" Value="{StaticResource T2Brush}" />
            <Setter Property="BorderThickness" Value="0,1" />
            <Setter Property="Margin" Value="8" />
            <Setter Property="Height" Value="25.6" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" CornerRadius="4">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                    <themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                        <Border x:Name="DropDownBorder" BorderBrush="{Binding (view:Helper.AccentBrush), RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="1" Background="White" CornerRadius="5">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextBlock.Foreground="{DynamicResource T1Brush}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <ToggleButton.Style>
                                        <Style TargetType="{x:Type ToggleButton}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="IsTabStop" Value="False"/>
                                            <Setter Property="Focusable" Value="False"/>
                                            <Setter Property="ClickMode" Value="Press"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                        <Border x:Name="templateRoot" Background="Transparent">
                                                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                                                <Path x:Name="Arrow" Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                                                            </Border>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <ContentPresenter x:Name="contentPresenter" TextBlock.FontFamily="{TemplateBinding FontFamily}"  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <TextBox x:Name="PART_EditableTextBox"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Stretch"
                                         VerticalContentAlignment="Center"
                                         Margin="0"
                                         Focusable="True"
                                         Background="{DynamicResource L1Brush}"
                                         FontFamily="{TemplateBinding FontFamily}"
                                         Visibility="Hidden"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         MinWidth="25">
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="Padding" Value="5,0"/>
                                            <Setter Property="BorderThickness" Value="0,0,1,0"/>
                                            <Setter Property="BorderBrush" Value="{DynamicResource T1Brush}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsFocused" Value="True">
                                                    <Setter Property="Background" Value="White" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <i:Interaction.Behaviors>
                                        <view:TextBoxEnterBehavior/>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                                <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                                <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="False">
                                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="True">
                                <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            </Trigger>
                            <MultiTrigger>

                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="True"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </MultiTrigger>
                            <Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToolBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid x:Name="Grid" SnapsToDevicePixels="true">
                            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}"
                                              IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsEnabled="{TemplateBinding HasOverflowItems}"
                                              Background="#00000000" BorderBrush="{x:Null}" BorderThickness="0"
                                              ClipToBounds="True">
                                    <Image Source="/Ibinimator;component/Resources/Icon/expander.png"
                                           Style="{DynamicResource Icon}" />
                                </ToggleButton>
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false"
                                       IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                       Placement="Bottom" StaysOpen="false">
                                    <themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                        <Border x:Name="ToolBarSubMenuBorder" Background="{DynamicResource L2Brush}"
                                                RenderOptions.ClearTypeHint="Enabled">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                  FocusVisualStyle="{x:Null}" Focusable="true"
                                                                  Margin="2"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  KeyboardNavigation.TabNavigation="Cycle"
                                                                  WrapWidth="200" />
                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header"
                                                      HorizontalAlignment="Center" Margin="4,0,4,0"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="Center" />
                                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Header" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true" />
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
                                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
                                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
                                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
            <Setter Property="BorderBrush" Value="{StaticResource A2Brush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="25.6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="12,0">
                            <Border x:Name="mainBorder"
                                    BorderThickness="0,0,0,1" Background="{TemplateBinding Background}" Margin="0"
                                    Cursor="Hand" Padding="{TemplateBinding Padding}">
                                <Border.BorderBrush>
                                    <SolidColorBrush
                                        Color="{Binding Path=(view:Helper.Accent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border.BorderBrush>
                                <TextBlock x:Name="contentPresenter" Text="{TemplateBinding Header}" Focusable="False"
                                           HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                           VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                         Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            </DataTrigger>
                            <DataTrigger
                                Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                Value="Top">
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0, 0, 0, 1" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                         Value="True">
                                <Setter Property="TextBlock.FontWeight" Value="Bold" TargetName="contentPresenter" />
                                <Setter Property="TextBlock.Foreground" TargetName="contentPresenter">
                                    <Setter.Value>
                                        <SolidColorBrush
                                            Color="{Binding Path=(view:Helper.Accent), Mode=OneWay, ElementName=mainBorder}" />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                         Value="False">
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
            <Setter Property="Background" Value="{StaticResource L1Brush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true"
                              KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="{DynamicResource L2Brush}" Grid.Column="0"
                                      IsItemsHost="true"
                                      Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Height="25.6"
                                      view:Helper.Accent="{TemplateBinding view:Helper.Accent}" />
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" Grid.Column="0"
                                    KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1"
                                    KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1" />
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1" />
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0" />
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource L1Brush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource L2Brush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <Rectangle x:Name="rectangle" Fill="{DynamicResource L1Brush}"
                                   RadiusX="4" RadiusY="4" Margin="4" />
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource L2Brush}" />
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{DynamicResource L3Brush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="true" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="#00F0F0F0" Grid.Row="1" />
                            <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{DynamicResource T1Brush}" Margin="3,4,3,3" Stretch="Uniform" />
                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{DynamicResource T1Brush}" Margin="3,4,3,3" Stretch="Uniform" />
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true">
                                <Setter Property="Fill" TargetName="ArrowBottom">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding (view:Helper.Accent), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true">
                                <Setter Property="Fill" TargetName="ArrowTop">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding (view:Helper.Accent), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{DynamicResource ForegroundSecondary}" />
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{DynamicResource ForegroundSecondary}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" />
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{DynamicResource Foreground}" Margin="3" Stretch="Uniform" />
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{DynamicResource Foreground}" Margin="3" Stretch="Uniform" />
                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ForegroundSecondary}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ForegroundSecondary}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ForegroundSecondary}" />
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ForegroundSecondary}" />
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ForegroundSecondary}" />
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ForegroundSecondary}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Application.Resources>
</Application>