<Application x:Class="Ibinimator.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:control="clr-namespace:Ibinimator.View.Control"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             xmlns:util="clr-namespace:Ibinimator.View.Utility"
             ShutdownMode="OnMainWindowClose" StartupUri="View/MainView.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <util:DesignerTimeResourceDictionary DesignTimeSource="Theme.Light.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <FontFamily x:Key="UIFont">/Ibinimator;component/Resources/Font/#Roboto</FontFamily>

            <Style x:Key="Icon" TargetType="{x:Type control:SvgImage}">
                <Setter Property="Height" Value="19.2" />
                <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
                <Setter Property="RenderOptions.EdgeMode" Value="Unspecified" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="Width" Value="19.2" />
            </Style>

            <!--#region Buttons-->
            <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Focusable="False" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{DynamicResource L2Brush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid>
                                <Border x:Name="shadow" Background="#3F000000">
                                    <Border.Effect>
                                        <BlurEffect />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="2" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter"
                                                      Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      Content="{TemplateBinding Content}"
                                                      ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Focusable="False" RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="shadow" Property="Effect" Value="{x:Null}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource L1Brush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource L0Brush}" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource T2Brush}" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ToolbarButton"
                   BasedOn="{StaticResource {x:Type ButtonBase}}"
                   TargetType="{x:Type ButtonBase}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Height" Value="50" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="12" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Focusable="False" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Width" Value="50" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#0C000000" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#19000000" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                        <Setter Property="Background" Value="#19000000" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.56" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion-->

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontFamily" Value="{StaticResource UIFont}" />
                <Setter Property="Foreground" Value="{DynamicResource T1Brush}" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="TextOptions.TextHintingMode" Value="Fixed" />
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource T2Brush}" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="FontFamily" Value="{StaticResource UIFont}" />
                <Setter Property="Foreground" Value="{DynamicResource T1Brush}" />
                <Setter Property="Height" Value="25.6" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Margin" Value="8" />
                <Setter Property="SelectionBrush">
                    <Setter.Value>
                        <SolidColorBrush
                            Color="{Binding Path=(util:Helper.Accent), RelativeSource={RelativeSource Self}}" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost"
                                              Focusable="False" HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="border" Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush Opacity="0.5" EndPoint="0,1">
                                                <GradientStop />
                                                <GradientStop Offset="0.75" />
                                                <GradientStop Offset="1"
                                                              Color="{Binding (util:Helper.Accent), ElementName=border}" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="border" Property="BorderBrush">
                                        <Setter.Value>
                                            <SolidColorBrush
                                                Color="{Binding Path=(util:Helper.Accent), ElementName=border}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="Background" Value="{DynamicResource L2Brush}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FontFamily" Value="/Ibinimator;component/Resources/Font/#Roboto" />
                <Setter Property="Height" Value="25.6" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="ItemTemplate" Value="{DynamicResource ComboBoxItemTemplate}" />
                <Setter Property="Margin" Value="8" />
                <Setter Property="MinWidth" Value="100" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <Border x:Name="shadow" Background="#3F000000">
                                    <Border.Effect>
                                        <BlurEffect />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="templateRoot"
                                        CornerRadius="2" SnapsToDevicePixels="True">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="2">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="0"
                                                                  MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                                            </Grid.ColumnDefinitions>
                                            <Popup x:Name="PART_Popup"
                                                   Grid.Column="0" Grid.ColumnSpan="2"
                                                   Margin="1"
                                                   AllowsTransparency="True"
                                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   Placement="Bottom" PopupAnimation="Fade">
                                                <themes:SystemDropShadowChrome x:Name="PopupShadow"
                                                                               MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                                               MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                               Color="Transparent">
                                                    <Border x:Name="DropDownBorder"
                                                            Background="White" CornerRadius="2">
                                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas"
                                                                        Width="0" Height="0"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Top">
                                                                    <Rectangle x:Name="OpaqueRect"
                                                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                                               Fill="{Binding Background, ElementName=DropDownBorder}" />
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                TextBlock.Foreground="{DynamicResource T1Brush}" />
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </themes:SystemDropShadowChrome>
                                            </Popup>
                                            <ToggleButton x:Name="toggleButton"
                                                          Grid.Column="0" Grid.ColumnSpan="2"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                <ToggleButton.Style>
                                                    <Style TargetType="{x:Type ToggleButton}">
                                                        <Setter Property="ClickMode" Value="Press" />
                                                        <Setter Property="Focusable" Value="False" />
                                                        <Setter Property="IsTabStop" Value="False" />
                                                        <Setter Property="OverridesDefaultStyle" Value="True" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                    <Border x:Name="templateRoot"
                                                                            Background="Transparent">
                                                                        <Border x:Name="splitBorder"
                                                                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                                                                Margin="0" HorizontalAlignment="Right"
                                                                                BorderBrush="Transparent"
                                                                                BorderThickness="1"
                                                                                SnapsToDevicePixels="True">
                                                                            <Path x:Name="Arrow"
                                                                                  Margin="0"
                                                                                  HorizontalAlignment="Center"
                                                                                  VerticalAlignment="Center"
                                                                                  Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                                                  Fill="{TemplateBinding Foreground}" />
                                                                        </Border>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                            <ContentPresenter x:Name="contentPresenter"
                                                              Grid.Column="0"
                                                              Margin="{TemplateBinding Padding}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Content="{TemplateBinding SelectionBoxItem}"
                                                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                              IsHitTestVisible="False"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              TextBlock.FontFamily="{TemplateBinding FontFamily}" />
                                            <TextBox x:Name="PART_EditableTextBox"
                                                     Grid.Column="0"
                                                     MinWidth="25"
                                                     Margin="0" HorizontalAlignment="Stretch"
                                                     VerticalAlignment="Stretch"
                                                     VerticalContentAlignment="Center"
                                                     Background="{DynamicResource LBrush}"
                                                     Focusable="True"
                                                     FontFamily="{TemplateBinding FontFamily}"
                                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                                     Visibility="Hidden">
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="BorderThickness" Value="0,0,1,0" />
                                                        <Setter Property="Padding" Value="5,0" />
                                                    </Style>
                                                </TextBox.Style>
                                                <i:Interaction.Behaviors>
                                                    <util:TextBoxEnterBehavior />
                                                </i:Interaction.Behaviors>
                                            </TextBox>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                                    <Setter TargetName="PopupShadow" Property="Color" Value="#71000000" />
                                    <Setter TargetName="PopupShadow" Property="Margin" Value="0,0,5,5" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="DropDownBorder" Property="Height" Value="95" />
                                </Trigger>
                                <Trigger Property="IsEditable" Value="True">
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="shadow" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="True" />
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                                   Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                                </MultiTrigger>
                                <Trigger SourceName="DropDownScrollViewer" Property="CanContentScroll" Value="False">
                                    <Setter TargetName="OpaqueRect" Property="Canvas.Left"
                                            Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                                    <Setter TargetName="OpaqueRect" Property="Canvas.Top"
                                            Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource L1Brush}" />
                    </Trigger>
                    <Trigger Property="IsDropDownOpen" Value="True">
                        <Setter Property="Background" Value="{DynamicResource L0Brush}" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource T2Brush}" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="Background" Value="{DynamicResource LBrush}" />
                <Setter Property="Padding" Value="8" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource L2Brush}" />
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="{DynamicResource L2Brush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type ToolBar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToolBar}">
                            <Grid x:Name="Grid" SnapsToDevicePixels="true">
                                <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                    <ToggleButton x:Name="OverflowButton"
                                                  Background="{DynamicResource L2Brush}"
                                                  BorderBrush="{x:Null}"
                                                  BorderThickness="0" ClickMode="Press" ClipToBounds="True"
                                                  FocusVisualStyle="{x:Null}"
                                                  IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  IsEnabled="{TemplateBinding HasOverflowItems}">
                                        <control:SvgImage Source="{DynamicResource IconExpander}"
                                                          Style="{DynamicResource Icon}" />
                                    </ToggleButton>
                                    <Popup x:Name="OverflowPopup"
                                           AllowsTransparency="true" Focusable="false"
                                           IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Bottom"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                           StaysOpen="false">
                                        <themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                            <Border x:Name="ToolBarSubMenuBorder"
                                                    Background="{DynamicResource L2Brush}"
                                                    RenderOptions.ClearTypeHint="Enabled">
                                                <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                                      Margin="2"
                                                                      FocusVisualStyle="{x:Null}"
                                                                      Focusable="true"
                                                                      KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                      KeyboardNavigation.TabNavigation="Cycle"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      WrapWidth="200" />
                                            </Border>
                                        </themes:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <Border x:Name="MainPanelBorder"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                    <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                        <ContentPresenter x:Name="ToolBarHeader"
                                                          Margin="4,0,4,0" HorizontalAlignment="Center"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Header"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <ToolBarPanel x:Name="PART_ToolBarPanel"
                                                      Margin="0,1,2,2"
                                                      IsItemsHost="true"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </DockPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Header" Value="{x:Null}">
                                    <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
                                    <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                                    <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                                    <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter TargetName="Grid" Property="Margin" Value="1,3,1,1" />
                                    <Setter TargetName="MainPanelBorder" Property="Margin" Value="0,0,0,11" />
                                    <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter TargetName="OverflowGrid" Property="VerticalAlignment" Value="Bottom" />
                                    <Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
                                    <Setter TargetName="PART_ToolBarPanel" Property="Margin" Value="1,0,2,2" />
                                    <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                                    <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,0,0,4" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="{DynamicResource A2Brush}" />
                <Setter Property="Foreground" Value="{DynamicResource T1Brush}" />
                <Setter Property="Height" Value="25.6" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot"
                                  Margin="12,0"
                                  SnapsToDevicePixels="true">
                                <Border x:Name="mainBorder"
                                        Margin="0"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="0,0,0,1" Cursor="Hand">
                                    <Border.BorderBrush>
                                        <SolidColorBrush
                                            Color="{Binding Path=(util:Helper.Accent), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Border.BorderBrush>
                                    <TextBlock x:Name="contentPresenter"
                                               HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                               VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                               Focusable="False"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               Text="{TemplateBinding Header}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                             Value="false">
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                </DataTrigger>
                                <DataTrigger
                                    Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}"
                                    Value="Top">
                                    <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,0,0,1" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                             Value="True">
                                    <Setter TargetName="contentPresenter" Property="TextBlock.FontWeight" Value="Bold" />
                                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush
                                                Color="{Binding Path=(util:Helper.Accent), Mode=OneWay, ElementName=mainBorder}" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                             Value="False">
                                    <Setter TargetName="mainBorder" Property="BorderThickness" Value="0" />
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Stretch" />
            </Style>

            <Style BasedOn="{StaticResource {x:Type TabItem}}" TargetType="{x:Type control:Pane}" />

            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Background" Value="{DynamicResource L1Brush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="{DynamicResource T1Brush}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot"
                                  ClipToBounds="true" KeyboardNavigation.TabNavigation="Local"
                                  SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0" />
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                    <RowDefinition x:Name="RowDefinition1" Height="*" />
                                </Grid.RowDefinitions>

                                <StackPanel Panel.ZIndex="1" Background="{DynamicResource L2Brush}">
                                    <Separator Margin="0"
                                               BorderThickness="1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                                        <Separator.BorderBrush>
                                            <SolidColorBrush Opacity="0.5" Color="{DynamicResource T2}" />
                                        </Separator.BorderBrush>
                                    </Separator>
                                    <TabPanel x:Name="headerPanel"
                                              Height="25.6"
                                              util:Helper.Accent="{TemplateBinding util:Helper.Accent}"
                                              IsItemsHost="true" KeyboardNavigation.TabIndex="1" />
                                    <Separator Margin="-1"
                                               BorderThickness="1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                                        <Separator.BorderBrush>
                                            <SolidColorBrush Opacity="0.25" Color="{DynamicResource T2}" />
                                        </Separator.BorderBrush>
                                    </Separator>
                                </StackPanel>


                                <Border x:Name="contentPanel"
                                        Grid.Row="1" Grid.Column="0"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                        KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                                      Margin="{TemplateBinding Padding}"
                                                      ContentSource="SelectedContent"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TabStripPlacement" Value="Bottom">
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                    <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="headerPanel" Property="Grid.Row" Value="1" />
                                    <Setter TargetName="headerPanel" Property="Margin" Value="2,0,2,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Left">
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="contentPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="headerPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="headerPanel" Property="Margin" Value="2,2,0,2" />
                                </Trigger>
                                <Trigger Property="TabStripPlacement" Value="Right">
                                    <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                    <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                    <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                    <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                    <Setter TargetName="contentPanel" Property="Grid.Column" Value="0" />
                                    <Setter TargetName="contentPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="headerPanel" Property="Grid.Column" Value="1" />
                                    <Setter TargetName="headerPanel" Property="Grid.Row" Value="0" />
                                    <Setter TargetName="headerPanel" Property="Margin" Value="0,2,2,2" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="templateRoot" Property="TextElement.Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style BasedOn="{StaticResource {x:Type ToolTip}}" TargetType="ToolTip">
                <Setter Property="Foreground" Value="Black" />
            </Style>

            <!--#region Scroll Bars-->
            <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="border"
                                    Background="Transparent" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Focusable="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource L1Brush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource L2Brush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value="0.56" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Rectangle Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{TemplateBinding Background}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Rectangle x:Name="rectangle"
                                           Margin="4,0"
                                           Fill="Red" RadiusX="4" RadiusY="4" />
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource L3Brush}" />
                                </Trigger>
                                <Trigger Property="IsDragging" Value="true">
                                    <Setter TargetName="rectangle" Property="Fill" Value="{DynamicResource L3Brush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="MinWidth"
                        Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="true" />
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition
                                        MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                    <RowDefinition Height="0.00001*" />
                                    <RowDefinition
                                        MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                </Grid.RowDefinitions>
                                <RepeatButton x:Name="PART_LineUpButton"
                                              Command="{x:Static ScrollBar.LineUpCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowTop"
                                          Margin="3,4,3,3"
                                          Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z"
                                          Fill="{DynamicResource T1Brush}"
                                          Stretch="Uniform" />
                                </RepeatButton>
                                <Border Grid.Row="1"
                                        Background="#00F0F0F0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                <Track x:Name="PART_Track"
                                       Grid.Row="1"
                                       IsDirectionReversed="true"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}"
                                                      Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineDownButton"
                                              Grid.Row="2"
                                              Command="{x:Static ScrollBar.LineDownCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowBottom"
                                          Margin="3,4,3,3"
                                          Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z"
                                          Fill="{DynamicResource T1Brush}"
                                          Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsPressed, ElementName=PART_LineDownButton}"
                                             Value="true">
                                    <Setter TargetName="ArrowBottom" Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush
                                                Color="{Binding (util:Helper.Accent), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true">
                                    <Setter TargetName="ArrowTop" Property="Fill">
                                        <Setter.Value>
                                            <SolidColorBrush
                                                Color="{Binding (util:Helper.Accent), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="ArrowBottom" Property="Fill"
                                            Value="{DynamicResource ForegroundSecondary}" />
                                    <Setter TargetName="ArrowTop" Property="Fill"
                                            Value="{DynamicResource ForegroundSecondary}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Width"
                        Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                <Style.Triggers>
                    <Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Height"
                                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                        <Setter Property="MinHeight"
                                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition
                                                MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                            <ColumnDefinition Width="0.00001*" />
                                            <ColumnDefinition
                                                MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        </Grid.ColumnDefinitions>
                                        <RepeatButton x:Name="PART_LineLeftButton"
                                                      Command="{x:Static ScrollBar.LineLeftCommand}"
                                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                                      Style="{StaticResource ScrollBarButton}">
                                            <Path x:Name="ArrowLeft"
                                                  Margin="3"
                                                  Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z"
                                                  Fill="{DynamicResource Foreground}"
                                                  Stretch="Uniform" />
                                        </RepeatButton>
                                        <Border Grid.Column="1"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}" />
                                        <Track x:Name="PART_Track"
                                               Grid.Column="1"
                                               IsEnabled="{TemplateBinding IsMouseOver}">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}"
                                                              Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}"
                                                              Style="{StaticResource RepeatButtonTransparent}" />
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb Style="{StaticResource ScrollBarThumb}" />
                                            </Track.Thumb>
                                        </Track>
                                        <RepeatButton x:Name="PART_LineRightButton"
                                                      Grid.Column="2"
                                                      Command="{x:Static ScrollBar.LineRightCommand}"
                                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                                      Style="{StaticResource ScrollBarButton}">
                                            <Path x:Name="ArrowRight"
                                                  Margin="3"
                                                  Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z"
                                                  Fill="{DynamicResource Foreground}"
                                                  Stretch="Uniform" />
                                        </RepeatButton>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                    Value="true" />
                                                <Condition
                                                    Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                    Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowRight" Property="Fill"
                                                    Value="{DynamicResource ForegroundSecondary}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                    Value="true" />
                                                <Condition
                                                    Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                    Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowLeft" Property="Fill"
                                                    Value="{DynamicResource ForegroundSecondary}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}"
                                                    Value="true" />
                                                <Condition
                                                    Binding="{Binding IsPressed, ElementName=PART_LineRightButton}"
                                                    Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowRight" Property="Fill"
                                                    Value="{DynamicResource ForegroundSecondary}" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition
                                                    Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}"
                                                    Value="true" />
                                                <Condition
                                                    Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}"
                                                    Value="false" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="ArrowLeft" Property="Fill"
                                                    Value="{DynamicResource ForegroundSecondary}" />
                                        </MultiDataTrigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="ArrowLeft" Property="Fill"
                                                    Value="{DynamicResource ForegroundSecondary}" />
                                            <Setter TargetName="ArrowRight" Property="Fill"
                                                    Value="{DynamicResource ForegroundSecondary}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Width" Value="Auto" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--#endregion-->

            <Style TargetType="{x:Type Menu}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FontFamily" Value="{StaticResource UIFont}" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <Border Padding="{TemplateBinding Padding}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>

            <Style x:Key="MenuScrollButton"
                   BasedOn="{x:Null}"
                   TargetType="{x:Type RepeatButton}">
                <Setter Property="ClickMode" Value="Hover" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border x:Name="templateRoot"
                                    Background="Transparent" BorderBrush="Transparent" BorderThickness="1"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter Margin="6" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

            <Style x:Key="MenuScrollViewer"
                   BasedOn="{x:Null}"
                   TargetType="{x:Type ScrollViewer}">
                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <RepeatButton Grid.Row="0" Grid.Column="0"
                                              Command="{x:Static ScrollBar.LineUpCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="False"
                                              Style="{StaticResource MenuScrollButton}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="0" FallbackValue="Visibility.Collapsed">
                                            <Binding Path="ComputedVerticalScrollBarVisibility"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="VerticalOffset"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ExtentHeight"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ViewportHeight"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <control:SvgImage Width="12" Source="{DynamicResource IconExpander}">
                                        <control:SvgImage.LayoutTransform>
                                            <RotateTransform Angle="180" CenterX="0.5" CenterY="0.5" />
                                        </control:SvgImage.LayoutTransform>
                                    </control:SvgImage>
                                </RepeatButton>
                                <Border Grid.Row="1" Grid.Column="0">
                                    <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                                </Border>
                                <RepeatButton Grid.Row="2" Grid.Column="0"
                                              Command="{x:Static ScrollBar.LineDownCommand}"
                                              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="False"
                                              Style="{StaticResource MenuScrollButton}">
                                    <RepeatButton.Visibility>
                                        <MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                                      ConverterParameter="100" FallbackValue="Visibility.Collapsed">
                                            <Binding Path="ComputedVerticalScrollBarVisibility"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="VerticalOffset"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ExtentHeight"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="ViewportHeight"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </RepeatButton.Visibility>
                                    <control:SvgImage Width="12" Source="{DynamicResource IconExpander}" />
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
            </Style>

            <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                <Border x:Name="Border">
                    <Grid>
                        <Border x:Name="MenuBorder" SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <SolidColorBrush Opacity="0.5" Color="{DynamicResource T2}" />
                            </Border.BorderBrush>
                            <ContentPresenter Margin="6,3,6,3" Panel.ZIndex="1"
                                              ContentSource="Header" RecognizesAccessKey="True" />
                        </Border>
                        <Popup x:Name="Popup"
                               AllowsTransparency="True" Focusable="False"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               Placement="Bottom" PopupAnimation="Fade">
                            <Border x:Name="SubmenuBorder"
                                    Background="{DynamicResource L2Brush}"
                                    BorderThickness="1,0,1,1" SnapsToDevicePixels="True">
                                <Border.BorderBrush>
                                    <SolidColorBrush Opacity="0.5" Color="{DynamicResource T2}" />
                                </Border.BorderBrush>
                                <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSubmenuOpen" Value="True">
                        <Setter TargetName="MenuBorder" Property="Background" Value="{DynamicResource L2Brush}" />
                        <Setter TargetName="MenuBorder" Property="BorderThickness" Value="1,1,1,0" />
                    </Trigger>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                        <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource L2Brush}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                    </Trigger>
                    <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                        <Setter TargetName="MenuBorder" Property="CornerRadius" Value="3,3,0,0" />
                        <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,3,3,3" />
                        <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="HotPink" />
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="{x:Type Separator}">
                <Setter Property="BorderBrush" Value="{DynamicResource T2Brush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Opacity" Value="0.5" />
                <Setter Property="Panel.ZIndex" Value="9999" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>

            <Style TargetType="{x:Type StatusBar}">
                <Setter Property="Background" Value="{DynamicResource L1Brush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource T2Brush}" />
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Setter Property="Padding" Value="5,0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
            </Style>


        </ResourceDictionary>
    </Application.Resources>
</Application>