<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>  
<#@ output extension=".cs" #>
using System;
using System.Windows.Media;
using System.Windows.Media.Imaging;

namespace Ibinimator.View
{
	public static class Icon 
	{
	<#
	var path = Path.GetDirectoryName(this.Host.TemplateFile);
	var files = Directory.EnumerateFiles(path, "*.png", SearchOption.AllDirectories).OrderBy(f => f).ToList();
	var info = new Dictionary<string, (string fileName, string variableName)>();

	foreach(var file in files.OrderBy(f => f).Select(f => new FileInfo(f)))
	{
		var parts = Regex.Match(file.Name, @"(?:([A-Za-z0-9]+)[\s-]*)+\.png");
		var varName = string.Join("", parts.Groups[1].Captures.OfType<Capture>().Select(c => char.ToUpper(c.Value[0]) + c.Value.Substring(1)));
		info.Add(file.FullName, (file.Name, varName));
	#>
	public static ImageSource <#= varName #>;
	<#
	}
	#>
	
		public static void Initialize() 
		{
		<#
		foreach (var pair in info) 
		{
		#>
	<#= pair.Value.variableName #> = new BitmapImage(new Uri("/Ibinimator;component/Resources/Icon/<#=pair.Value.fileName#>", UriKind.Relative));
		<#
		}
		#>
	
		}
	}
}