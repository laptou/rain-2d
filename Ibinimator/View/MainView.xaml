<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:control="clr-namespace:Ibinimator.View.Control"
    xmlns:view="clr-namespace:Ibinimator.View"
    xmlns:viewmodel="clr-namespace:Ibinimator.ViewModel"
    xmlns:service="clr-namespace:Ibinimator.Service"
    xmlns:commands="clr-namespace:Ibinimator.Service.Commands"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:d2d="clr-namespace:SharpDX.Direct2D1;assembly=SharpDX.Direct2D1"
    xmlns:tools="clr-namespace:Ibinimator.Service.Tools"
    xmlns:util="clr-namespace:Ibinimator.View.Util"
    xmlns:command="clr-namespace:Ibinimator.View.Command"
    xmlns:model="clr-namespace:Ibinimator.Renderer.Model;assembly=Ibinimator.Renderer"
    xmlns:renderer="clr-namespace:Ibinimator.Renderer;assembly=Ibinimator.Renderer"
    x:Class="Ibinimator.View.MainView" d:DesignWidth="1920" d:DesignHeight="1080"
    mc:Ignorable="d" Title="Ibinimator" WindowState="Maximized"
    Icon="/Ibinimator;component/Resources/logo.png">
    <Window.Resources>
        <util:UnitConverter x:Key="AngleConverter" BaseUnit="Radians" />
        <util:UnitConverter x:Key="DistanceConverter" BaseUnit="Pixels" />
        <util:UnitConverter x:Key="PointConverter" BaseUnit="Points" />
        <util:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <util:PercentageConverter x:Key="PercentageConverter" />
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30" CornerRadius="5" UseAeroCaptionButtons="False" ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Window.InputBindings>
        <KeyBinding Gesture="Control+SHIFT+OemOpenBrackets"
                    Command="{x:Static command:SelectionCommands.MoveToBottomCommand}"
                    CommandParameter="{Binding SelectionManager}" />
        <KeyBinding Gesture="Control+OemOpenBrackets"
                    Command="{x:Static command:SelectionCommands.MoveDownCommand}"
                    CommandParameter="{Binding SelectionManager}" />
        <KeyBinding Gesture="Control+OemCloseBrackets"
                    Command="{x:Static command:SelectionCommands.MoveUpCommand}"
                    CommandParameter="{Binding SelectionManager}" />
        <KeyBinding Gesture="Control+SHIFT+OemCloseBrackets"
                    Command="{x:Static command:SelectionCommands.MoveToTopCommand}"
                    CommandParameter="{Binding SelectionManager}" />

        <KeyBinding
            Command="{x:Static command:ObjectCommands.GroupCommand}"
            CommandParameter="{Binding HistoryManager}"
            Gesture="Control+G" />
        <KeyBinding
            Command="{x:Static command:ObjectCommands.UngroupCommand}"
            CommandParameter="{Binding HistoryManager}"
            Gesture="Control+Shift+G" />

        <KeyBinding
            Command="{x:Static command:ObjectCommands.UnionCommand}"
            CommandParameter="{Binding HistoryManager}"
            Gesture="Control+OemPlus" />
        <KeyBinding
            Command="{x:Static command:ObjectCommands.DifferenceCommand}"
            CommandParameter="{Binding HistoryManager}"
            Gesture="Control+Shift+OemMinus" />
        <KeyBinding
            Command="{x:Static command:ObjectCommands.IntersectionCommand}"
            CommandParameter="{Binding HistoryManager}"
            Gesture="Control+Shift+8" />
        <KeyBinding
            Command="{x:Static command:ObjectCommands.XorCommand}"
            CommandParameter="{Binding HistoryManager}"
            Gesture="Control+Shift+6" />

        <KeyBinding Gesture="Control+Z"
                    Command="{x:Static command:HistoryCommands.UndoCommand}"
                    CommandParameter="{Binding HistoryManager}" />
        <KeyBinding Gesture="Control+SHIFT+Z"
                    Command="{x:Static command:HistoryCommands.RedoCommand}"
                    CommandParameter="{Binding HistoryManager}" />
        <KeyBinding Gesture="Control+Y"
                    Command="{x:Static command:HistoryCommands.RedoCommand}"
                    CommandParameter="{Binding HistoryManager}" />
        <KeyBinding Gesture="Control+S"
                    Command="{x:Static command:FileCommands.SaveCommand}"
                    CommandParameter="{Binding ViewManager}" />
        <KeyBinding Gesture="Control+O"
                    Command="{x:Static command:FileCommands.OpenCommand}"
                    CommandParameter="{Binding ViewManager}" />
    </Window.InputBindings>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="7" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <d:Window.DataContext>
        <viewmodel:MainViewModel />
    </d:Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="50" />
            <RowDefinition Height="40" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Background="{StaticResource L1Brush}">
            <Grid UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Image Source="pack://application:,,,/Resources/logo.png" Width="24" Margin="0,0,0,0"
                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                <StackPanel Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="1">
                    <Menu FontFamily="/Ibinimator;component/Resources/Font/#Roboto" FontSize="14"
                          VerticalAlignment="Center" Background="{x:Null}" Margin="16,0,0,0">
                        <MenuItem Header="_File">
                            <MenuItem Header="_Open"
                                      Command="{x:Static command:FileCommands.OpenCommand}"
                                      CommandParameter="{Binding ViewManager}"
                                      InputGestureText="Control O" />
                            <MenuItem Header="_Save"
                                      Command="{x:Static command:FileCommands.SaveCommand}"
                                      CommandParameter="{Binding ViewManager}"
                                      InputGestureText="Control S" />
                        </MenuItem>
                        <MenuItem Header="_Edit">
                            <MenuItem Header="_Undo"
                                      Command="{x:Static command:HistoryCommands.UndoCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control Z" />
                            <MenuItem Header="_Redo"
                                      Command="{x:Static command:HistoryCommands.RedoCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control Y" />
                        </MenuItem>
                        <MenuItem Header="_Time" />
                        <MenuItem Header="_Object">
                            <MenuItem Header="Move to Bottom"
                                      Command="{x:Static command:SelectionCommands.MoveToBottomCommand}"
                                      CommandParameter="{Binding SelectionManager}"
                                      InputGestureText="Control Shift [" />
                            <MenuItem Header="Move Down"
                                      Command="{x:Static command:SelectionCommands.MoveDownCommand}"
                                      CommandParameter="{Binding SelectionManager}"
                                      InputGestureText="Control [" />
                            <MenuItem Header="Move Up"
                                      Command="{x:Static command:SelectionCommands.MoveUpCommand}"
                                      CommandParameter="{Binding SelectionManager}"
                                      InputGestureText="Control ]" />
                            <MenuItem Header="Move to Top"
                                      Command="{x:Static command:SelectionCommands.MoveToTopCommand}"
                                      CommandParameter="{Binding SelectionManager}"
                                      InputGestureText="Control Shift ]" />
                            <Separator />
                            <MenuItem Header="_Group"
                                      Command="{x:Static command:ObjectCommands.GroupCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control G" />
                            <MenuItem Header="_Ungroup"
                                      Command="{x:Static command:ObjectCommands.UngroupCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control Shift G" />
                            <Separator />
                            <MenuItem Header="Union"
                                      Command="{x:Static command:ObjectCommands.UnionCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control +" />
                            <MenuItem Header="Difference"
                                      Command="{x:Static command:ObjectCommands.DifferenceCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control -" />
                            <MenuItem Header="Intersect"
                                      Command="{x:Static command:ObjectCommands.IntersectionCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control *" />
                            <MenuItem Header="Xor"
                                      Command="{x:Static command:ObjectCommands.XorCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control ^" />
                            <Separator/>
                            <MenuItem Header="Pathify"
                                      Command="{x:Static command:ObjectCommands.PathifyCommand}"
                                      CommandParameter="{Binding HistoryManager}"
                                      InputGestureText="Control Shift Enter" ></MenuItem>
                        </MenuItem>
                        <MenuItem Header="Te_xt" />
                        <MenuItem Header="_Help">
                            <MenuItem Header="_License" Command="{x:Static command:ViewCommands.LicenseCommand}" />
                        </MenuItem>
                        <Menu.Resources>
                            <Style TargetType="MenuItem">
                                <Setter Property="FontSize" Value="12" />
                            </Style>
                        </Menu.Resources>
                    </Menu>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                            WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="1">
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static SystemCommands.MinimizeWindowCommand}" Height="30" Padding="12,6">
                        <control:SvgImage
                            Source="pack://application:,,,/Resources/Icon/minimize.svg"
                            Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static SystemCommands.RestoreWindowCommand}" Height="30" Padding="12,6">
                        <control:SvgImage
                            Source="pack://application:,,,/Resources/Icon/restore.svg"
                            Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static SystemCommands.CloseWindowCommand}" Height="30" Padding="12,6">
                        <control:SvgImage
                            Source="pack://application:,,,/Resources/Icon/close.svg"
                            Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <Border Background="{StaticResource L2Brush}" Grid.Row="1">
            <ToolBar ToolBarTray.IsLocked="True" Background="{x:Null}" Margin="50,0,0,0" Padding="0"
                     UseLayoutRounding="True">
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.MoveToBottomCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Send to Back">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/to back.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.MoveDownCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Move Backward">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/backward.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.MoveUpCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Move Forward">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/forward.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.MoveToTopCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Move to Front">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/to front.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.FlipHorizontalCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Flip Horizontally">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/flip horizontally.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.FlipVerticalCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Flip Vertically">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/flip vertically.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.RotateClockwiseCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Rotate 90° Clockwise">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/rotate cw.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:SelectionCommands.RotateCounterClockwiseCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{util:ComparisonBinding SelectionManager.Selection.Count, GT, 0}"
                            ToolTip="Rotate 90° Counterclockwise">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/rotate ccw.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Show Grid">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/grid.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Snap to Grid">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/snap.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Align Left Edges">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/align left.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Align Horizontal Centers">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/align center horizontally.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Align Right Edges">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/align right.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Align Top Edges">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/align top.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Align Vertical Centers">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/align center vertically.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}" ToolTip="Align Bottom Edges">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/align bottom.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/expander.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:ObjectCommands.UnionCommand}"
                            CommandParameter="{Binding HistoryManager}" ToolTip="Union">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/union.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:ObjectCommands.DifferenceCommand}"
                            CommandParameter="{Binding HistoryManager}" ToolTip="Difference">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/difference.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:ObjectCommands.IntersectionCommand}"
                            CommandParameter="{Binding HistoryManager}" ToolTip="Intersection">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/intersection.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static command:ObjectCommands.XorCommand}"
                            CommandParameter="{Binding HistoryManager}" ToolTip="XOR">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/xor.svg"
                                          Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
            </ToolBar>
        </Border>
        <Separator Grid.ColumnSpan="3" Grid.Row="2" VerticalAlignment="Top" Margin="0" Height="1" Panel.ZIndex="2"
                   Background="{DynamicResource T2Brush}" Opacity="0.25" />
        <Border Background="{StaticResource L2Brush}" Grid.Row="2">
            <Grid>
                <ItemsControl ItemsSource="{Binding ToolManager.Tool.Options}"
                              util:Helper.Accent="{DynamicResource A4}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplateSelector>
                        <util:EnumTemplateSelector PropertyName="Type" />
                    </ItemsControl.ItemTemplateSelector>
                    <ItemsControl.Resources>
                        <DataTemplate x:Key="{x:Static tools:ToolOptionType.Dropdown}">
                            <StackPanel Orientation="Horizontal" Margin="16,0">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Name}" />
                                    :
                                </TextBlock>
                                <ComboBox x:Name="Dropdown" ItemsSource="{Binding Options}"
                                          Margin="8,0" SelectedValue="{Binding Value}"
                                          util:Helper.Accent="{DynamicResource A4}" />
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Name}" Value="Font Family">
                                    <Setter TargetName="Dropdown" Property="ItemTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}" FontFamily="{Binding}" />
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                        <DataTemplate x:Key="{x:Static tools:ToolOptionType.Number}">
                            <StackPanel Orientation="Horizontal" Margin="16,0">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Name}" />
                                    :
                                </TextBlock>
                                <ComboBox x:Name="Dropdown" ItemsSource="{Binding Options}"
                                          Margin="8,0" IsEditable="True">
                                    <ComboBox.Text>
                                        <MultiBinding Converter="{StaticResource PointConverter}"
                                                      UpdateSourceTrigger="LostFocus">
                                            <Binding Path="Value" />
                                            <Binding Path="Unit" Mode="OneWay" />
                                        </MultiBinding>
                                    </ComboBox.Text>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </Grid>
        </Border>
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="384" />
            </Grid.ColumnDefinitions>
            <ToolBarTray Grid.Column="0" Grid.RowSpan="2" Width="50" Orientation="Vertical"
                         Background="{StaticResource L2Brush}">
                <ToolBar ToolBarTray.IsLocked="True" Background="{x:Null}" Margin="0" Padding="0"
                         VerticalAlignment="Stretch">
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static renderer:ToolType.Select}, Mode=TwoWay}"
                                 ToolTip="Select">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/cursor.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static renderer:ToolType.Node}, Mode=TwoWay}"
                                 ToolTip="Node">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/pointer.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static renderer:ToolType.Pencil}, Mode=TwoWay}"
                                 ToolTip="Pencil">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/pencil.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}" ToolTip="Pen"
                                 IsEnabled="False">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/pen.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static renderer:ToolType.Text}, Mode=TwoWay}"
                                 ToolTip="Text">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/text.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}" ToolTip="Color Picker"
                                 IsEnabled="False">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/eyedropper.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}" ToolTip="Fill Area"
                                 IsEnabled="False">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/bucket.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}" ToolTip="Timeline"
                                 IsEnabled="False">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/keyframe.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}" ToolTip="Mask"
                                 IsEnabled="False">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/mask.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}" ToolTip="Zoom"
                                 IsEnabled="False">
                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/zoom.svg"
                                          Style="{DynamicResource Icon}" />
                    </RadioButton>
                </ToolBar>
            </ToolBarTray>
            <TabControl Grid.Column="1">
                <TabItem Background="White">
                    <Grid>
                        <control:ArtView x:Name="ArtView" />
                        <TextBlock
                            Text="{Binding Fps, 
                                    ElementName=ArtView, 
                                    Mode=OneWay, 
                                    StringFormat=\{0:N1\} FPS}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Margin="10" />
                    </Grid>
                </TabItem>
            </TabControl>
            <Grid Grid.Column="2" Grid.Row="0" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TabControl util:Helper.Accent="{StaticResource A2}">
                    <TabItem Header="Color" DataContext="{Binding FillPicker}">
                        <Grid MinWidth="384">
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="50" Height="50"
                                  Margin="8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <RadioButton
                                    GroupName="colorPickerTarget"
                                    Grid.ColumnSpan="2" Grid.RowSpan="2"
                                    IsChecked="{Binding PickerTarget, Converter={StaticResource EnumToBooleanConverter}, 
                                        ConverterParameter={x:Static viewmodel:ColorPickerTarget.Stroke}, Mode=TwoWay}">
                                    <Path Stroke="{StaticResource T2Brush}" StrokeThickness="1" Stretch="Uniform"
                                          Fill="{Binding StrokeBrush, Mode=OneWay}">
                                        <Path.Data>
                                            <CombinedGeometry GeometryCombineMode="Exclude">
                                                <CombinedGeometry.Geometry1>
                                                    <EllipseGeometry Center="100, 100" RadiusX="100" RadiusY="100" />
                                                </CombinedGeometry.Geometry1>
                                                <CombinedGeometry.Geometry2>
                                                    <EllipseGeometry Center="100, 100" RadiusX="75" RadiusY="75" />
                                                </CombinedGeometry.Geometry2>
                                            </CombinedGeometry>
                                        </Path.Data>
                                        <Path.Style>
                                            <Style TargetType="Shape">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding StrokeBrush, Mode=OneWay}"
                                                                 Value="{x:Null}">
                                                        <Setter Property="Fill" Value="{DynamicResource NullBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </RadioButton>
                                <RadioButton
                                    GroupName="colorPickerTarget"
                                    Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2"
                                    IsChecked="{Binding PickerTarget, Converter={StaticResource EnumToBooleanConverter}, 
                                        ConverterParameter={x:Static viewmodel:ColorPickerTarget.Fill}, Mode=TwoWay}">
                                    <Ellipse Stroke="{StaticResource T2Brush}" StrokeThickness="1" Stretch="Uniform"
                                             Fill="{Binding FillBrush, Mode=OneWay}">
                                        <Ellipse.Style>
                                            <Style TargetType="Shape">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding FillBrush, Mode=OneWay}"
                                                                 Value="{x:Null}">
                                                        <Setter Property="Fill" Value="{DynamicResource NullBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                </RadioButton>
                                <Ellipse Stroke="{StaticResource T2Brush}" StrokeThickness="1" Stretch="Uniform"
                                         Grid.Column="0" Grid.Row="2" Fill="{DynamicResource NullBrush}" />
                                <Grid.Resources>
                                    <LinearGradientBrush x:Key="NullBrush">
                                        <GradientStop Color="White" />
                                        <GradientStop Color="White" Offset="0.449" />
                                        <GradientStop Color="Red" Offset="0.45" />
                                        <GradientStop Color="Red" Offset="0.55" />
                                        <GradientStop Color="White" Offset="0.556" />
                                        <GradientStop Color="White" Offset="1" />
                                    </LinearGradientBrush>
                                    <Style TargetType="RadioButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <Grid x:Name="templateRoot" Background="Transparent"
                                                          SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                          Focusable="False"
                                                                          HorizontalAlignment="Stretch"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                          VerticalAlignment="Stretch" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Panel.ZIndex" Value="1" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                </Grid.Resources>
                            </Grid>

                            <Grid DataContext="{Binding Picker}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <control:HslWheel x:Name="HslWheel" Height="144" Width="144"
                                                  Color="{Binding Color, Mode=TwoWay}"
                                                  Grid.RowSpan="2" VerticalAlignment="Top" Margin="0,8" />

                                <Grid Grid.Row="0" Grid.Column="1" Height="160" Margin="0,0,10,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="H" />
                                    </TextBlock>
                                    <Slider Grid.Row="0" Grid.Column="1" Value="{Binding Hue, Mode=TwoWay}"
                                            Maximum="360" LargeChange="10" SmallChange="1" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Row="0" Grid.Column="2"
                                             Text="{Binding Hue, Mode=TwoWay, StringFormat=\{0:F0\}°}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="S" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="1" Value="{Binding Saturation, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="1"
                                             Text="{Binding Saturation, Converter={StaticResource PercentageConverter}, Mode=TwoWay}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="L" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="2" Value="{Binding Lightness, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="2"
                                             Text="{Binding Lightness, Converter={StaticResource PercentageConverter}, Mode=TwoWay}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="R" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="3" Value="{Binding Red, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="3"
                                             Text="{Binding Red, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="G" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="4" Value="{Binding Green, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="4"
                                             Text="{Binding Green, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="B" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="5" Value="{Binding Blue, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="5"
                                             Text="{Binding Blue, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                </Grid>

                                <DockPanel Margin="0,5,10,5" Grid.Row="1" Height="25" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="A" />
                                    </TextBlock>
                                    <TextBox DockPanel.Dock="Right" Width="50"
                                             Text="{Binding Alpha, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                             Background="Transparent" BorderBrush="{DynamicResource T1Brush}"
                                             BorderThickness="0,0,0,1" Margin="0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <Slider Value="{Binding Alpha, Mode=TwoWay}" LargeChange="0.1" Maximum="1"
                                            SmallChange="0.05" VerticalAlignment="Center" Margin="0,0,5,0" />
                                </DockPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Swatches" />
                    <TabItem Header="Stroke">
                        <Grid>
                            <Grid Margin="0,8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="Width:" DockPanel.Dock="Left" HorizontalAlignment="Center"
                                           VerticalAlignment="Center" Margin="16,0" />

                                <TextBox
                                    Text="{Binding FillPicker.StrokeWidth, Mode=TwoWay, Converter={StaticResource DistanceConverter}}"
                                    VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                    BorderThickness="0,0,0,1" Margin="0" Grid.Row="0" Grid.Column="1">
                                    <i:Interaction.Behaviors>
                                        <util:TextBoxEnterBehavior />
                                    </i:Interaction.Behaviors>
                                </TextBox>

                                <TextBlock Text="Style:" DockPanel.Dock="Left" HorizontalAlignment="Center"
                                           VerticalAlignment="Center" Margin="16,0" Grid.Row="0" Grid.Column="2" />

                                <UniformGrid Columns="2" Margin="0" Grid.Row="0" Grid.Column="3">
                                    <RadioButton GroupName="strokeDashStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeDash, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:DashStyle.Solid}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage
                                            Source="pack://application:,,,/Resources/Icon/stroke-solid.svg"
                                            Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton GroupName="strokeDashStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeDash, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:DashStyle.Custom}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6" HorizontalContentAlignment="Center"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage
                                            Source="pack://application:,,,/Resources/Icon/stroke-dash.svg"
                                            Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                </UniformGrid>

                                <TextBlock Text="End:" DockPanel.Dock="Left" HorizontalAlignment="Center"
                                           VerticalAlignment="Center" Margin="16,0" Grid.Column="0" Grid.Row="1" />

                                <UniformGrid Columns="3" Grid.Column="1" Margin="0,8,0,0" Grid.Row="1">
                                    <RadioButton GroupName="strokeEndStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeCap, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:CapStyle.Flat}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6" HorizontalContentAlignment="Center"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/end-flat.svg"
                                                          Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton GroupName="strokeEndStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeCap, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:CapStyle.Square}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6" HorizontalContentAlignment="Center"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/end-square.svg"
                                                          Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton GroupName="strokeEndStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeCap, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:CapStyle.Round}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6" HorizontalContentAlignment="Center"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage Source="pack://application:,,,/Resources/Icon/end-round.svg"
                                                          Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                </UniformGrid>

                                <TextBlock Text="Corner:" DockPanel.Dock="Left" HorizontalAlignment="Center"
                                           VerticalAlignment="Center" Margin="16,8,16,0" Grid.Column="2" Grid.Row="1" />

                                <UniformGrid Columns="3" Grid.Column="3" Margin="0,8,0,0" Grid.Row="1">
                                    <RadioButton GroupName="strokeJoinStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeJoin, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:LineJoin.Miter}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6" HorizontalContentAlignment="Center"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage
                                            Source="pack://application:,,,/Resources/Icon/corner-miter.svg"
                                            Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton GroupName="strokeEndStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeJoin, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:LineJoin.Bevel}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6" HorizontalContentAlignment="Center"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage
                                            Source="pack://application:,,,/Resources/Icon/corner-bevel.svg"
                                            Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton GroupName="strokeEndStyle" Style="{StaticResource ToolbarButton}"
                                                 IsChecked="{Binding FillPicker.StrokeJoin, 
                                                     Converter={StaticResource EnumToBooleanConverter},
                                                     ConverterParameter={x:Static d2d:LineJoin.Round}, Mode=TwoWay}"
                                                 Width="Auto" Height="25.6" HorizontalContentAlignment="Center"
                                                 Padding="0" VerticalAlignment="Center">
                                        <control:SvgImage
                                            Source="pack://application:,,,/Resources/Icon/corner-round.svg"
                                            Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                </UniformGrid>

                                <TextBlock Grid.Row="2" Grid.Column="0" Text="Miter:" DockPanel.Dock="Left"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" Margin="16,0" />

                                <TextBox
                                    Text="{Binding FillPicker.StrokeMiterLimit, Mode=TwoWay, Converter={StaticResource DistanceConverter}}"
                                    VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                    BorderThickness="0,0,0,1" Margin="0" Grid.Row="2" Grid.Column="1">
                                    <i:Interaction.Behaviors>
                                        <util:TextBoxEnterBehavior />
                                    </i:Interaction.Behaviors>
                                </TextBox>

                                <TextBlock Grid.Row="3" Grid.Column="0" Text="Dashes:" DockPanel.Dock="Left"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" Margin="16,0" />

                                <UniformGrid Margin="0,8,0,0" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3"
                                             Columns="4">
                                    <TextBox Text="{Binding FillPicker.StrokeDashes[0], Mode=TwoWay}" Margin="0,0,16,0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <TextBox Text="{Binding FillPicker.StrokeDashes[1], Mode=TwoWay}" Margin="0,0,16,0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <TextBox Text="{Binding FillPicker.StrokeDashes[2], Mode=TwoWay}" Margin="0,0,16,0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <TextBox Text="{Binding FillPicker.StrokeDashes[3], Mode=TwoWay}" Margin="0,0,16,0">
                                        <i:Interaction.Behaviors>
                                            <util:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                </UniformGrid>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <TabControl util:Helper.Accent="{StaticResource A1}" Grid.Row="1">
                    <TabItem Header="Layers">
                        <TreeView x:Name="LayerTree" ItemsSource="{Binding ViewManager.Root.SubLayers}"
                                  BorderThickness="0" Padding="0"
                                  Background="{DynamicResource L3Brush}">
                            <TreeView.Resources>
                                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Width" Value="16" />
                                    <Setter Property="Height" Value="16" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Background="Transparent" Height="16" Width="16">
                                                    <control:SvgImage x:Name="ExpandPath"
                                                                      Source="pack://application:,,,/Resources/Icon/expander.svg"
                                                                      Cursor="Hand"
                                                                      Style="{StaticResource Icon}"
                                                                      RenderTransformOrigin="0.5,0.5">
                                                        <control:SvgImage.RenderTransform>
                                                            <RotateTransform Angle="-90" />
                                                        </control:SvgImage.RenderTransform>
                                                    </control:SvgImage>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-45" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TreeView.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectLayerCommand, Mode=OneWay}"
                                                           CommandParameter="{Binding SelectedValue, ElementName=LayerTree, Mode=OneWay}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type model:Layer}"
                                                          ItemsSource="{Binding SubLayers}">
                                    <TextBlock x:Name="layerName" Text="{Binding Name}" FontWeight="Normal" />
                                    <HierarchicalDataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                                            <Setter TargetName="layerName" Property="Text"
                                                    Value="{Binding DefaultName, StringFormat=(\{0\})}" />
                                            <Setter TargetName="layerName" Property="Opacity" Value="0.56" />
                                        </DataTrigger>
                                    </HierarchicalDataTemplate.Triggers>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="Background" Value="{StaticResource L1Brush}" />
                                    <Setter Property="HorizontalContentAlignment"
                                            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    <Setter Property="VerticalContentAlignment"
                                            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    <Setter Property="Padding" Value="0,10,0,0" />
                                    <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"
                                                        Margin="-19,0,0,0">
                                                    <Grid VerticalAlignment="Center" Margin="19,0,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MinWidth="19" Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <ToggleButton x:Name="Expander" ClickMode="Press"
                                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                      Style="{StaticResource ExpandCollapseToggleStyle}" />
                                                        <ContentPresenter x:Name="PART_Header" Grid.Column="1"
                                                                          ContentSource="Header"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="3"
                                                                        Grid.Column="1" Grid.Row="1" Margin="0,10,0,0" />
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsExpanded" Value="false">
                                                        <Setter Property="Padding" Value="0,10" />
                                                        <Setter Property="Visibility" TargetName="ItemsHost"
                                                                Value="Collapsed" />
                                                        <Setter Property="Margin" TargetName="ItemsHost" Value="0" />
                                                    </Trigger>
                                                    <Trigger Property="HasItems" Value="false">
                                                        <Setter Property="Visibility" TargetName="Expander"
                                                                Value="Hidden" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Selected}" Value="true">
                                                        <Setter Property="Background" TargetName="Bd"
                                                                Value="{StaticResource L2Brush}" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <!--<i:Interaction.Behaviors>
                                    <view:TreeViewMultipleSelectionBehavior SelectedItems="{Binding Selection}" />
                                </i:Interaction.Behaviors>-->
                        </TreeView>
                    </TabItem>
                    <TabItem Header="Effects" />
                </TabControl>
                <TabControl util:Helper.Accent="{StaticResource A3}" Grid.Row="2">
                    <TabItem Header="Transform">
                        <Grid Margin="8,0,8,8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1.5*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="3*" />
                            </Grid.ColumnDefinitions>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectionManager.Selection.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center"
                                    BorderBrush="{DynamicResource T2Brush}" BorderThickness="1"
                                    Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5">
                                <Grid Width="50" Height="50">
                                    <Path Data="M0,100 L100,100 50,13.39745 Z"
                                          Stroke="{DynamicResource A3Brush}" StrokeThickness="1"
                                          Stretch="Uniform" Margin="5" />
                                </Grid>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform x:Name="RotateTransform" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="RotateTransform"
                                                                 Storyboard.TargetProperty="Angle"
                                                                 To="{Binding TransformPicker.Rotation, Converter={StaticResource AngleConverter}, ConverterParameter={x:Static model:Unit.Degrees}, NotifyOnTargetUpdated=True}"
                                                                 Duration="0:0:0.25">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                            </Border>
                            <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center"
                                       VerticalAlignment="Center" Text="X:" />
                            <TextBox Grid.Row="0" Grid.Column="2"
                                     Text="{Binding TransformPicker.X, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <util:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                Y:
                            </TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="2"
                                     Text="{Binding TransformPicker.Y, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <util:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>

                            <TextBlock Grid.Row="0" Grid.Column="3" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                W:
                            </TextBlock>
                            <TextBox Grid.Row="0" Grid.Column="4"
                                     Text="{Binding TransformPicker.Width, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <util:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                H:
                            </TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="4"
                                     Text="{Binding TransformPicker.Height, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <util:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>

                            <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                R:
                            </TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="2"
                                     Text="{Binding TransformPicker.Rotation, Converter={StaticResource AngleConverter}, ConverterParameter={x:Static model:Unit.Degrees}}">
                                <i:Interaction.Behaviors>
                                    <util:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="2" Grid.Column="3" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                S:
                            </TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="4"
                                     Text="{Binding TransformPicker.Shear, Converter={StaticResource AngleConverter}, ConverterParameter={x:Static model:Unit.Degrees}}">
                                <i:Interaction.Behaviors>
                                    <util:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="History">
                        <Grid MinHeight="128" MaxHeight="256">
                            <ListBox ItemsSource="{Binding HistoryManager}" x:Name="HistoryList"
                                     Background="{DynamicResource L1Brush}" SelectionMode="Single"
                                     SelectedValuePath="Id"
                                     SelectedValue="{Binding HistoryManager.Position, Mode=TwoWay}"
                                     BorderBrush="{x:Null}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground">
                                                    <Setter.Value>
                                                        <SolidColorBrush
                                                            Color="{Binding 
                                                                Path=(util:Helper.Accent), 
                                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="FontWeight" Value="Bold" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type renderer:IOperationCommand}">
                                        <TextBlock x:Name="HistoryRecordDescription"
                                                   Margin="8,4"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}">
                                            <Run Text="{Binding Description, Mode=OneWay}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
            <GridSplitter Grid.Row="0" Grid.Column="1" Width="5" Background="Transparent" />
            <StatusBar Grid.Column="1" Grid.Row="1" Height="25">
                <TextBlock util:TextBlockHelper.FormattedText="{Binding ToolManager.Tool.Status, Mode=OneWay}" />
            </StatusBar>
        </Grid>
    </Grid>
</Window>