<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:control="clr-namespace:Ibinimator.View.Control"
    xmlns:view="clr-namespace:Ibinimator.View"
    xmlns:model="clr-namespace:Ibinimator.Model"
    xmlns:viewmodel="clr-namespace:Ibinimator.ViewModel"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:service="clr-namespace:Ibinimator.Service"
    x:Class="Ibinimator.View.MainView" d:DesignWidth="1920" d:DesignHeight="1080"
    mc:Ignorable="d" Title="Ibinimator" WindowState="Maximized"
    Icon="/Ibinimator;component/Resources/logo.png">
    <Window.Resources>
        <view:UnitConverter x:Key="AngleConverter" SourceUnit="Radians" TargetUnit="Degrees" />
        <view:UnitConverter x:Key="DistanceConverter" SourceUnit="Pixels" TargetUnit="Pixels" />
        <view:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <view:PercentageConverter x:Key="PercentageConverter" />
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="50" />
    </WindowChrome.WindowChrome>
    <Window.InputBindings>
        <KeyBinding Gesture="CTRL+SHIFT+OemOpenBrackets" 
                    Command="{x:Static service:SelectionCommands.MoveToBottomCommand}"
                    CommandParameter="{Binding SelectionManager}"/>
        <KeyBinding Gesture="CTRL+OemOpenBrackets" 
                    Command="{x:Static service:SelectionCommands.MoveDownCommand}"
                    CommandParameter="{Binding SelectionManager}"/>
        <KeyBinding Gesture="CTRL+OemCloseBrackets" 
                    Command="{x:Static service:SelectionCommands.MoveUpCommand}"
                    CommandParameter="{Binding SelectionManager}"/>
        <KeyBinding Gesture="CTRL+SHIFT+OemCloseBrackets" 
                    Command="{x:Static service:SelectionCommands.MoveToTopCommand}"
                    CommandParameter="{Binding SelectionManager}"/>
        <KeyBinding Gesture="CTRL+Z" 
                    Command="{x:Static service:HistoryCommands.UndoCommand}"
                    CommandParameter="{Binding HistoryManager}"/>
        <KeyBinding Gesture="CTRL+SHIFT+Z" 
                    Command="{x:Static service:HistoryCommands.RedoCommand}"
                    CommandParameter="{Binding HistoryManager}"/>
        <KeyBinding Gesture="CTRL+S" 
                    Command="{x:Static service:FileCommands.SerializeCommand}"
                    CommandParameter="{Binding ViewManager.Root}"/>
    </Window.InputBindings>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness"
                            Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <d:Window.DataContext>
        <viewmodel:MainViewModel />
    </d:Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="50" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Background="{StaticResource L1Brush}">
            <Grid UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Image Source="/Ibinimator;component/Resources/logo.png" Width="30" Margin="8,0,0,0"
                       HorizontalAlignment="Center" VerticalAlignment="Center" />

                <StackPanel Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="1">
                    <Menu FontFamily="/Ibinimator;component/Resources/Fonts/#Roboto" FontSize="16"
                          VerticalAlignment="Center"
                          Background="{x:Null}" Margin="16,0,0,0">
                        <MenuItem Header="_File" />
                        <MenuItem Header="_Edit" />
                        <MenuItem Header="_Time" />
                        <MenuItem Header="Te_xt" />
                    </Menu>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                            WindowChrome.IsHitTestVisibleInChrome="True" Grid.Column="1">
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static SystemCommands.MinimizeWindowCommand}">
                        <Image Source="/Ibinimator;component/Resources/Icon/minimize.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static SystemCommands.RestoreWindowCommand}">
                        <Image Source="/Ibinimator;component/Resources/Icon/restore.png" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static SystemCommands.CloseWindowCommand}">
                        <Image Source="/Ibinimator;component/Resources/Icon/close.png" Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <Border Background="{StaticResource L2Brush}" Grid.Row="1">
            <ToolBar ToolBarTray.IsLocked="True" Background="{x:Null}" Margin="50,0,0,0" Padding="0"
                     UseLayoutRounding="True">
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.MoveToBottomCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/to back.png" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.MoveDownCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/backward.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.MoveUpCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/forward.png" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.MoveToTopCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/to front.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.FlipHorizontalCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/flip horizontally.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.FlipVerticalCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/flip vertically.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.RotateClockwiseCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/rotate cw.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}"
                            Command="{x:Static service:SelectionCommands.RotateCounterClockwiseCommand}"
                            CommandParameter="{Binding SelectionManager}"
                            IsEnabled="{view:ComparisonBinding SelectionManager.Selection.Count, GT, 0}">
                        <Image Source="/Ibinimator;component/Resources/Icon/rotate ccw.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/grid.png" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/snap.png" Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/align left.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/align center horizontally.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/align right.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/align top.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/align center vertically.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/align bottom.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/expander.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
                <Border Width="50" />
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/union.png" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/difference.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/intersection.png"
                               Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/divide.png" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/combine.png" Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
            </ToolBar>
        </Border>
        <Grid Grid.Row="2" UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ToolBarTray Grid.Column="0" Width="50" Orientation="Vertical" Background="{StaticResource L2Brush}">
                <ToolBar ToolBarTray.IsLocked="True" Background="{x:Null}" Margin="0" Padding="0"
                         VerticalAlignment="Stretch">
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static service:ToolType.Select}, Mode=TwoWay}">
                        <Image Source="/Ibinimator;component/Resources/Icon/cursor.png" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static service:ToolType.Path}, Mode=TwoWay}">
                        <Image Source="/Ibinimator;component/Resources/Icon/pointer.png" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static service:ToolType.Pencil}, Mode=TwoWay}">
                        <Image Source="/Ibinimator;component/Resources/Icon/pencil.png" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/pen.png" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/eyedropper.png"
                               Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/bucket.png" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/keyframe.png"
                               Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/mask.png" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" Style="{StaticResource ToolbarButton}">
                        <Image Source="/Ibinimator;component/Resources/Icon/zoom.png" Style="{DynamicResource Icon}" />
                    </RadioButton>
                </ToolBar>
            </ToolBarTray>
            <TabControl Grid.Column="1">
                <TabItem>
                    <Border Background="White">
                        <control:ArtView x:Name="ArtView">
                        </control:ArtView>
                    </Border>
                </TabItem>
            </TabControl>
            <Grid Grid.Column="2" Width="384">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TabControl view:Helper.Accent="{StaticResource A2}">
                    <TabItem Header="Color" DataContext="{Binding FillPicker}">
                        <Grid>
                            <Grid HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="50" Height="50"
                                  Margin="8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <RadioButton
                                    GroupName="colorPickerTarget"
                                    Grid.ColumnSpan="2" Grid.RowSpan="2"
                                    IsChecked="{Binding PickerTarget, Converter={StaticResource EnumToBooleanConverter}, 
                                        ConverterParameter={x:Static viewmodel:ColorPickerTarget.Stroke}, Mode=TwoWay}">
                                    <Path Stroke="{StaticResource T2Brush}" StrokeThickness="1" Stretch="Uniform"
                                          Fill="{Binding StrokeBrush, Mode=OneWay}">
                                        <Path.Data>
                                            <CombinedGeometry GeometryCombineMode="Exclude">
                                                <CombinedGeometry.Geometry1>
                                                    <EllipseGeometry Center="100, 100" RadiusX="100" RadiusY="100" />
                                                </CombinedGeometry.Geometry1>
                                                <CombinedGeometry.Geometry2>
                                                    <EllipseGeometry Center="100, 100" RadiusX="75" RadiusY="75" />
                                                </CombinedGeometry.Geometry2>
                                            </CombinedGeometry>
                                        </Path.Data>
                                        <Path.Style>
                                            <Style TargetType="Shape">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding StrokeBrush, Mode=OneWay}"
                                                                 Value="{x:Null}">
                                                        <Setter Property="Fill" Value="{DynamicResource NullBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </RadioButton>
                                <RadioButton
                                    GroupName="colorPickerTarget"
                                    Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="2"
                                    IsChecked="{Binding PickerTarget, Converter={StaticResource EnumToBooleanConverter}, 
                                        ConverterParameter={x:Static viewmodel:ColorPickerTarget.Fill}, Mode=TwoWay}">
                                    <Ellipse Stroke="{StaticResource T2Brush}" StrokeThickness="1" Stretch="Uniform"
                                             Fill="{Binding FillBrush, Mode=OneWay}">
                                        <Ellipse.Style>
                                            <Style TargetType="Shape">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding FillBrush, Mode=OneWay}"
                                                                 Value="{x:Null}">
                                                        <Setter Property="Fill" Value="{DynamicResource NullBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                </RadioButton>
                                <Ellipse Stroke="{StaticResource T2Brush}" StrokeThickness="1" Stretch="Uniform"
                                         Grid.Column="0" Grid.Row="2" Fill="{DynamicResource NullBrush}" />
                                <Grid.Resources>
                                    <LinearGradientBrush x:Key="NullBrush">
                                        <GradientStop Color="White" />
                                        <GradientStop Color="White" Offset="0.449" />
                                        <GradientStop Color="Red" Offset="0.45" />
                                        <GradientStop Color="Red" Offset="0.55" />
                                        <GradientStop Color="White" Offset="0.556" />
                                        <GradientStop Color="White" Offset="1" />
                                    </LinearGradientBrush>
                                    <Style TargetType="RadioButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <Grid x:Name="templateRoot" Background="Transparent"
                                                          SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                          Focusable="False"
                                                                          HorizontalAlignment="Stretch"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                          VerticalAlignment="Stretch" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Panel.ZIndex" Value="1" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                </Grid.Resources>
                            </Grid>

                            <Grid DataContext="{Binding Picker}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <control:HslWheel x:Name="HslWheel" Height="144" Width="144"
                                                  Hue="{Binding Hue, Mode=TwoWay}"
                                                  Lightness="{Binding Lightness, Mode=TwoWay}"
                                                  Saturation="{Binding Saturation, Mode=TwoWay}" Grid.RowSpan="2"
                                                  VerticalAlignment="Top" Margin="0,8" />

                                <Grid Grid.Row="0" Grid.Column="1" Height="160" Margin="0,0,10,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="H" />
                                    </TextBlock>
                                    <Slider Grid.Row="0" Grid.Column="1" Value="{Binding Hue, Mode=TwoWay}"
                                            Maximum="360" LargeChange="10" SmallChange="1" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Row="0" Grid.Column="2"
                                             Text="{Binding Hue, Mode=TwoWay, StringFormat=\{0:F0\}°}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0" />

                                    <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="S" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="1" Value="{Binding Saturation, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="1"
                                             Text="{Binding Saturation, Converter={StaticResource PercentageConverter}, Mode=TwoWay}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0" />

                                    <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="L" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="2" Value="{Binding Lightness, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="2"
                                             Text="{Binding Lightness, Converter={StaticResource PercentageConverter}, Mode=TwoWay}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0" />

                                    <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="R" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="3" Value="{Binding Red, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="3"
                                             Text="{Binding Red, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0" />

                                    <TextBlock Grid.Row="4" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="G" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="4" Value="{Binding Green, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="4"
                                             Text="{Binding Green, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0" />

                                    <TextBlock Grid.Row="5" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="B" />
                                    </TextBlock>
                                    <Slider Grid.Column="1" Grid.Row="5" Value="{Binding Blue, Mode=TwoWay}"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05" VerticalAlignment="Center"
                                            Margin="0,0,5,0" />
                                    <TextBox Grid.Column="2" Grid.Row="5"
                                             Text="{Binding Blue, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             Background="Transparent" BorderThickness="0,0,0,1" Margin="0" />
                                </Grid>

                                <DockPanel Margin="0,5,10,5" Grid.Row="1" Height="25" Grid.Column="1">
                                    <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Run Text="A" />
                                    </TextBlock>
                                    <TextBox DockPanel.Dock="Right" Width="50"
                                             Text="{Binding Alpha, Mode=TwoWay, StringFormat=\{0:F2\}}"
                                             VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                             Background="Transparent" BorderBrush="{DynamicResource T1Brush}"
                                             BorderThickness="0,0,0,1" Margin="0" />
                                    <Slider Value="{Binding Alpha, Mode=TwoWay}" LargeChange="0.1" Maximum="1"
                                            SmallChange="0.05" VerticalAlignment="Center" Margin="0,0,5,0" />
                                </DockPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Swatches" />
                    <TabItem Header="Stroke">
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Stroke Width: " DockPanel.Dock="Left" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,0" />
                                <TextBox  Width="50"
                                         Text="{Binding FillPicker.StrokeWidth, Mode=TwoWay, Converter={StaticResource DistanceConverter}}"
                                         VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                         BorderThickness="0,0,0,1" Margin="0" Grid.Column="1" />
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <TabControl view:Helper.Accent="{StaticResource A1}" Grid.Row="1">
                    <TabItem Header="Layers">
                        <TreeView x:Name="LayerTree" ItemsSource="{Binding ViewManager.Root.SubLayers}"
                                  BorderThickness="0" Padding="0"
                                  Background="{DynamicResource L3Brush}">
                            <TreeView.Resources>
                                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Width" Value="16" />
                                    <Setter Property="Height" Value="16" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Background="Transparent" Height="16" Width="16">
                                                    <Image x:Name="ExpandPath"
                                                           Source="/Ibinimator;component/Resources/Icon/expander.png"
                                                           Cursor="Hand"
                                                           Style="{StaticResource Icon}"
                                                           RenderTransformOrigin="0.5,0.5">
                                                        <Image.RenderTransform>
                                                            <RotateTransform Angle="-90" />
                                                        </Image.RenderTransform>
                                                    </Image>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-45" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TreeView.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectLayerCommand, Mode=OneWay}"
                                                           CommandParameter="{Binding SelectedValue, ElementName=LayerTree, Mode=OneWay}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type model:Layer}"
                                                          ItemsSource="{Binding SubLayers}">
                                    <TextBlock x:Name="layerName" Text="{Binding Name}" FontWeight="Normal" />
                                    <HierarchicalDataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                                            <Setter TargetName="layerName" Property="Text"
                                                    Value="{Binding DefaultName, StringFormat=(\{0\})}" />
                                            <Setter TargetName="layerName" Property="Opacity" Value="0.56" />
                                        </DataTrigger>
                                    </HierarchicalDataTemplate.Triggers>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="Background" Value="{StaticResource L1Brush}" />
                                    <Setter Property="HorizontalContentAlignment"
                                            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    <Setter Property="VerticalContentAlignment"
                                            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    <Setter Property="Padding" Value="0,10,0,0" />
                                    <Setter Property="Foreground" Value="{StaticResource T1Brush}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}"
                                                        Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true"
                                                        Margin="-19,0,0,0">
                                                    <Grid VerticalAlignment="Center" Margin="19,0,0,0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MinWidth="19" Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <ToggleButton x:Name="Expander" ClickMode="Press"
                                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                      Style="{StaticResource ExpandCollapseToggleStyle}" />
                                                        <ContentPresenter x:Name="PART_Header" Grid.Column="1"
                                                                          ContentSource="Header"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="3"
                                                                        Grid.Column="1" Grid.Row="1" Margin="0,10,0,0" />
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsExpanded" Value="false">
                                                        <Setter Property="Padding" Value="0,10" />
                                                        <Setter Property="Visibility" TargetName="ItemsHost"
                                                                Value="Collapsed" />
                                                        <Setter Property="Margin" TargetName="ItemsHost" Value="0" />
                                                    </Trigger>
                                                    <Trigger Property="HasItems" Value="false">
                                                        <Setter Property="Visibility" TargetName="Expander"
                                                                Value="Hidden" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Selected}" Value="true">
                                                        <Setter Property="Background" TargetName="Bd"
                                                                Value="{StaticResource L2Brush}" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <!--<i:Interaction.Behaviors>
                                <view:TreeViewMultipleSelectionBehavior SelectedItems="{Binding Selection}" />
                            </i:Interaction.Behaviors>-->
                        </TreeView>
                    </TabItem>
                    <TabItem Header="Effects" />
                </TabControl>
                <TabControl view:Helper.Accent="{StaticResource A3}" Grid.Row="2">
                    <TabItem Header="Transform">
                        <Grid Margin="8,0,8,8">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1*" />
                                <RowDefinition Height="1.5*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2*" />
                                <ColumnDefinition/>
                                <ColumnDefinition Width="3*" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="3*" />
                            </Grid.ColumnDefinitions>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectionManager.Selection.Count}" Value="0">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Border HorizontalAlignment="Center" VerticalAlignment="Center" 
                                    BorderBrush="{DynamicResource T2Brush}" BorderThickness="1" 
                                    Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5">
                                <Grid Width="50" Height="50">
                                    <Path Data="M0,100 L100,100 50,13.39745 Z"
                                          Stroke="{DynamicResource A3Brush}" StrokeThickness="1" 
                                          Stretch="Uniform" Margin="5"/>
                                </Grid>
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform x:Name="RotateTransform"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="RotateTransform" 
                                                                 Storyboard.TargetProperty="Angle"
                                                                 To="{Binding TransformPicker.Rotation, Converter={StaticResource AngleConverter}, NotifyOnTargetUpdated=True}" 
                                                                 Duration="0:0:0.25" >
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                            </Border>
                            <TextBlock Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center"
                                       VerticalAlignment="Center" Text="X:" />
                            <TextBox Grid.Row="0" Grid.Column="2"
                                     Text="{Binding TransformPicker.X, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <view:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                Y:
                            </TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="2"
                                     Text="{Binding TransformPicker.Y, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <view:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>

                            <TextBlock Grid.Row="0" Grid.Column="3" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                W:
                            </TextBlock>
                            <TextBox Grid.Row="0" Grid.Column="4"
                                     Text="{Binding TransformPicker.Width, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <view:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="1" Grid.Column="3" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                H:
                            </TextBlock>
                            <TextBox Grid.Row="1" Grid.Column="4"
                                     Text="{Binding TransformPicker.Height, Converter={StaticResource DistanceConverter}}">
                                <i:Interaction.Behaviors>
                                    <view:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>

                            <TextBlock Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                R:
                            </TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="2"
                                     Text="{Binding TransformPicker.Rotation, Converter={StaticResource AngleConverter}}">
                                <i:Interaction.Behaviors>
                                    <view:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <TextBlock Grid.Row="2" Grid.Column="3" HorizontalAlignment="Center"
                                       VerticalAlignment="Center">
                                S:
                            </TextBlock>
                            <TextBox Grid.Row="2" Grid.Column="4"
                                     Text="{Binding TransformPicker.Shear, Converter={StaticResource AngleConverter}}">
                                <i:Interaction.Behaviors>
                                    <view:TextBoxEnterBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </Grid>
                    </TabItem>
                    <TabItem Header="History">
                        <Grid MinHeight="128" MaxHeight="256">
                            <ListBox ItemsSource="{Binding HistoryManager}" x:Name="HistoryList"
                                      Background="{DynamicResource L1Brush}" SelectionMode="Single" 
                                      SelectedValuePath="Id" SelectedValue="{Binding HistoryManager.Time}" 
                                      BorderBrush="{x:Null}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="Foreground" Value="{Binding (view:Helper.Accent), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock x:Name="HistoryRecordDescription" Text="{Binding Description}"
                                                   Margin="8,4" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                    </TabItem>
                </TabControl>
            </Grid>
            <GridSplitter Grid.Column="1" Width="5" Background="Transparent"/>
        </Grid>
    </Grid>
</Window>