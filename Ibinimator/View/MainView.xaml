<Window x:Class="Ibinimator.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:control="clr-namespace:Ibinimator.View.Control" xmlns:coremodel="clr-namespace:Ibinimator.Core.Model;assembly=Ibinimator.Core"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:model="clr-namespace:Ibinimator.Renderer.Model;assembly=Ibinimator.Renderer"
        xmlns:utility="clr-namespace:Ibinimator.View.Utility" xmlns:viewmodel="clr-namespace:Ibinimator.ViewModel"
        Title="Ibinimator"
        d:DesignHeight="1080" d:DesignWidth="1920" Icon="/Ibinimator;component/Resources/logo.png"
        WindowState="Maximized"
        mc:Ignorable="d">
    <Window.Resources>
        <utility:UnitConverter x:Key="DistanceConverter" BaseUnit="Pixels" />
        <utility:UnitConverter x:Key="PointConverter" BaseUnit="Points" />
        <utility:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
        <utility:PercentageConverter x:Key="PercentageConverter" />
        <utility:InversionConverter x:Key="Inverter" />
    </Window.Resources>
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30" CornerRadius="5" ResizeBorderThickness="5"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <utility:Helper.InputBindingSource>
        <Binding Path="Shortcuts" />
    </utility:Helper.InputBindingSource>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="7" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <d:Window.DataContext>
        <viewmodel:MainViewModel />
    </d:Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="50" />
            <RowDefinition Height="40" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Background="{DynamicResource L0Brush}">
            <Grid UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Image Width="24"
                       Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                       Source="/Ibinimator;component/Resources/logo.png" />
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                    <Menu Margin="16,0,0,0" VerticalAlignment="Center"
                          ItemsSource="{Binding MenuItems}">
                        <Menu.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding Command}" />
                                <Setter Property="CommandParameter" Value="{Binding ArtContext}" />
                                <Setter Property="FontSize" Value="12" />
                                <Setter Property="InputGestureText" Value="{Binding Shortcut}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Type}" Value="{x:Static viewmodel:MenuItemType.Separator}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Separator Margin="0,4"
                                                               BorderBrush="{DynamicResource T2Brush}"
                                                               BorderThickness="1" Opacity="0.25" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Menu.ItemContainerStyle>
                        <Menu.ItemTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type viewmodel:MenuItem}" ItemsSource="{Binding Path=SubMenus}">
                                <Grid>
                                    <TextBlock Text="{Binding Name}" />
                                </Grid>
                            </HierarchicalDataTemplate>
                        </Menu.ItemTemplate>
                    </Menu>
                </StackPanel>
                <StackPanel Grid.Column="1"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                    <Button Height="30"
                            Padding="12,6"
                            Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                            Style="{StaticResource ToolbarButton}">
                        <control:SvgImage Source="{DynamicResource IconMinimize}" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Height="30"
                            Padding="12,6"
                            Command="{x:Static SystemCommands.RestoreWindowCommand}"
                            Style="{StaticResource ToolbarButton}">
                        <control:SvgImage Source="{DynamicResource IconRestore}" Style="{DynamicResource Icon}" />
                    </Button>
                    <Button Height="30"
                            Padding="12,6"
                            Command="{x:Static SystemCommands.CloseWindowCommand}"
                            Style="{StaticResource ToolbarButton}">
                        <control:SvgImage Source="{DynamicResource IconClose}" Style="{DynamicResource Icon}" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <Border Grid.Row="1" Background="{DynamicResource L1Brush}">
            <ToolBar Margin="50,0,0,0" Padding="0"
                     Background="{x:Null}"
                     BorderBrush="Transparent"
                     ItemsSource="{Binding ToolbarItems}"
                     ToolBarTray.IsLocked="True" UseLayoutRounding="True">
                <ToolBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ToolBar.ItemsPanel>
                <ToolBar.ItemTemplateSelector>
                    <utility:EnumTemplateSelector PropertyName="Type" />
                </ToolBar.ItemTemplateSelector>
                <ToolBar.Resources>
                    <DataTemplate x:Key="{x:Static viewmodel:ToolbarItemType.Button}">
                        <Button Command="{Binding Command}"
                                CommandParameter="{Binding ArtContext}"
                                Style="{StaticResource ToolbarButton}"
                                ToolTip="{Binding Name}">
                            <control:SvgImage Source="{Binding Icon}" Style="{DynamicResource Icon}" />
                        </Button>
                    </DataTemplate>

                    <DataTemplate x:Key="{x:Static viewmodel:ToolbarItemType.Space}">
                        <Border Width="50" />
                    </DataTemplate>
                </ToolBar.Resources>
            </ToolBar>
        </Border>
        <Separator Grid.Row="2" Grid.ColumnSpan="3"
                   Margin="0" VerticalAlignment="Top"
                   BorderBrush="{DynamicResource L1Brush}"
                   BorderThickness="1" />
        <Border Grid.Row="2" Background="{DynamicResource L1Brush}">
            <Grid>
                <ItemsControl utility:Helper.Accent="{DynamicResource TA4}" ItemsSource="{Binding ToolManager.Tool.Options}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplateSelector>
                        <utility:EnumTemplateSelector PropertyName="Type" />
                    </ItemsControl.ItemTemplateSelector>
                    <ItemsControl.Resources>
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Dropdown}">
                            <StackPanel Margin="16,0" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Name}" /><Run Text=":" />
                                </TextBlock>
                                <ComboBox x:Name="Dropdown"
                                          Margin="8,0"
                                          utility:Helper.Accent="{DynamicResource A4}"
                                          ItemsSource="{Binding Values}"
                                          SelectedValue="{Binding Value}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Font}">
                            <StackPanel Margin="16,0" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Name}" /><Run Text=":" />
                                </TextBlock>
                                <ComboBox x:Name="Dropdown"
                                          Margin="8,0"
                                          utility:Helper.Accent="{DynamicResource A4}"
                                          ItemsSource="{Binding Values}"
                                          SelectedValue="{Binding Value}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock FontFamily="{Binding}" Text="{Binding}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Length}">
                            <StackPanel Margin="16,0" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Name}" />
                                    :</TextBlock>
                                <ComboBox x:Name="Dropdown"
                                          Margin="8,0"
                                          IsEditable="True"
                                          ItemsSource="{Binding Values}">
                                    <ComboBox.Text>
                                        <MultiBinding Converter="{StaticResource PointConverter}" UpdateSourceTrigger="LostFocus">
                                            <Binding Path="Value" />
                                            <Binding Mode="OneWay" Path="Unit" />
                                        </MultiBinding>
                                    </ComboBox.Text>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </Grid>
        </Border>
        <Grid Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="384" />
            </Grid.ColumnDefinitions>
            <ToolBarTray Grid.RowSpan="2" Grid.Column="0"
                         Width="50"
                         Background="{DynamicResource L2Brush}"
                         Orientation="Vertical">
                <ToolBar Margin="0" Padding="0" VerticalAlignment="Stretch"
                         Background="{x:Null}"
                         ToolBarTray.IsLocked="True">
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Select}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Select">
                        <control:SvgImage Source="{DynamicResource IconSelect}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Node}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Node">
                        <control:SvgImage Source="{DynamicResource IconNode}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Pencil}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Pencil">
                        <control:SvgImage Source="{DynamicResource IconPencil}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Pen">
                        <control:SvgImage Source="{DynamicResource IconPen}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Text}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Text">
                        <control:SvgImage Source="{DynamicResource IconText}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Color Picker">
                        <control:SvgImage Source="{DynamicResource IconEyedropper}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Flood">
                        <control:SvgImage Source="{DynamicResource IconFlood}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Gradient}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Gradient">
                        <control:SvgImage Source="{DynamicResource IconGradient}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Keyframe">
                        <control:SvgImage Source="{DynamicResource IconKeyframe}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Mask">
                        <control:SvgImage Source="{DynamicResource IconMask}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False"
                                 Style="{StaticResource ToolbarButton}"
                                 ToolTip="Zoom">
                        <control:SvgImage Source="{DynamicResource IconZoom}" Style="{DynamicResource Icon}" />
                    </RadioButton>
                </ToolBar>
            </ToolBarTray>
            <TabControl Grid.Column="1">
                <TabItem Background="White">
                    <Grid>
                        <control:ArtView x:Name="ArtView" />
                        <TextBlock Margin="10" HorizontalAlignment="Left" VerticalAlignment="Top"
                                   Text="{Binding Fps, ElementName=ArtView, Mode=OneWay, StringFormat=\{0:N1\} FPS}" />
                    </Grid>
                </TabItem>
            </TabControl>
            <GridSplitter Grid.Row="0" Grid.Column="1"
                          Width="5"
                          Background="Transparent" />
            <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TabControl utility:Helper.Accent="{DynamicResource TA2}">
                    <TabItem DataContext="{Binding FillPicker}" Header="Color">
                        <Grid MinWidth="384">
                            <Grid Width="50" Height="50"
                                  Margin="8" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="2*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <LinearGradientBrush x:Key="NullBrush">
                                        <GradientStop Color="White" />
                                        <GradientStop Offset="0.449" Color="White" />
                                        <GradientStop Offset="0.45" Color="Red" />
                                        <GradientStop Offset="0.55" Color="Red" />
                                        <GradientStop Offset="0.556" Color="White" />
                                        <GradientStop Offset="1" Color="White" />
                                    </LinearGradientBrush>
                                    <Style TargetType="RadioButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type RadioButton}">
                                                    <Grid x:Name="templateRoot"
                                                          Background="Transparent" SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="contentPresenter"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                                          Content="{TemplateBinding Content}"
                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                          Focusable="False"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Panel.ZIndex" Value="1" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>

                                </Grid.Resources>
                                <RadioButton Grid.RowSpan="2" Grid.ColumnSpan="2"
                                             GroupName="colorPickerTarget"
                                             IsChecked="{Binding PickerTarget, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewmodel:ColorPickerTarget.Stroke}, Mode=TwoWay}">
                                    <Path Stretch="Uniform"
                                          Stroke="{DynamicResource T2Brush}"
                                          StrokeThickness="1">
                                        <Path.Data>
                                            <CombinedGeometry GeometryCombineMode="Exclude">
                                                <CombinedGeometry.Geometry1>
                                                    <EllipseGeometry Center="100, 100" RadiusX="100" RadiusY="100" />
                                                </CombinedGeometry.Geometry1>
                                                <CombinedGeometry.Geometry2>
                                                    <EllipseGeometry Center="100, 100" RadiusX="75" RadiusY="75" />
                                                </CombinedGeometry.Geometry2>
                                            </CombinedGeometry>
                                        </Path.Data>
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Fill" Value="{Binding StrokeBrush, Mode=OneWay}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding StrokeBrush, Mode=OneWay}" Value="{x:Null}">
                                                        <Setter Property="Fill" Value="{DynamicResource NullBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </RadioButton>
                                <RadioButton Grid.Row="1" Grid.RowSpan="2" Grid.Column="1"
                                             Grid.ColumnSpan="2"
                                             GroupName="colorPickerTarget"
                                             IsChecked="{Binding PickerTarget, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static viewmodel:ColorPickerTarget.Fill}, Mode=TwoWay}">
                                    <Ellipse Stretch="Uniform"
                                             Stroke="{DynamicResource T2Brush}"
                                             StrokeThickness="1">
                                        <Ellipse.Style>
                                            <Style TargetType="Shape">
                                                <Setter Property="Fill" Value="{Binding FillBrush, Mode=OneWay}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding FillBrush, Mode=OneWay}" Value="{x:Null}">
                                                        <Setter Property="Fill" Value="{DynamicResource NullBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                </RadioButton>
                                <Ellipse Grid.Row="2" Grid.Column="0"
                                         Fill="{DynamicResource NullBrush}"
                                         Stretch="Uniform"
                                         Stroke="{DynamicResource T2Brush}"
                                         StrokeThickness="1" />
                            </Grid>

                            <Grid DataContext="{Binding Picker}">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <control:HslWheel x:Name="HslWheel"
                                                  Grid.RowSpan="2"
                                                  Width="144" Height="144"
                                                  Margin="0,8" VerticalAlignment="Top"
                                                  Color="{Binding Color, Mode=TwoWay}" />

                                <Grid Grid.Row="0" Grid.Column="1"
                                      Height="160"
                                      Margin="0,0,10,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="50" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">
                                        <Run Text="H" />
                                    </TextBlock>
                                    <Slider Grid.Row="0" Grid.Column="1"
                                            Margin="0,0,5,0" VerticalAlignment="Center"
                                            LargeChange="10" Maximum="360" SmallChange="1"
                                            Value="{Binding Hue, Mode=TwoWay}" />
                                    <TextBox Grid.Row="0" Grid.Column="2"
                                             Margin="0"
                                             Background="Transparent" BorderThickness="0,0,0,1"
                                             Text="{Binding Hue, Mode=TwoWay, StringFormat=\{0:F0\}°}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="1" Grid.Column="0"
                                               Margin="0,0,5,0" VerticalAlignment="Center">
                                        <Run Text="S" />
                                    </TextBlock>
                                    <Slider Grid.Row="1" Grid.Column="1"
                                            Margin="0,0,5,0" VerticalAlignment="Center"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05"
                                            Value="{Binding Saturation, Mode=TwoWay}" />
                                    <TextBox Grid.Row="1" Grid.Column="2"
                                             Margin="0"
                                             Background="Transparent" BorderThickness="0,0,0,1"
                                             Text="{Binding Saturation, Converter={StaticResource PercentageConverter}, Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="2" Grid.Column="0"
                                               Margin="0,0,5,0" VerticalAlignment="Center">
                                        <Run Text="L" />
                                    </TextBlock>
                                    <Slider Grid.Row="2" Grid.Column="1"
                                            Margin="0,0,5,0" VerticalAlignment="Center"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05"
                                            Value="{Binding Lightness, Mode=TwoWay}" />
                                    <TextBox Grid.Row="2" Grid.Column="2"
                                             Margin="0"
                                             Background="Transparent" BorderThickness="0,0,0,1"
                                             Text="{Binding Lightness, Converter={StaticResource PercentageConverter}, Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="3" Grid.Column="0"
                                               Margin="0,0,5,0" VerticalAlignment="Center">
                                        <Run Text="R" />
                                    </TextBlock>
                                    <Slider Grid.Row="3" Grid.Column="1"
                                            Margin="0,0,5,0" VerticalAlignment="Center"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05"
                                            Value="{Binding Red, Mode=TwoWay}" />
                                    <TextBox Grid.Row="3" Grid.Column="2"
                                             Margin="0"
                                             Background="Transparent" BorderThickness="0,0,0,1"
                                             Text="{Binding Red, Mode=TwoWay, StringFormat=\{0:F2\}}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="4" Grid.Column="0"
                                               Margin="0,0,5,0" VerticalAlignment="Center">
                                        <Run Text="G" />
                                    </TextBlock>
                                    <Slider Grid.Row="4" Grid.Column="1"
                                            Margin="0,0,5,0" VerticalAlignment="Center"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05"
                                            Value="{Binding Green, Mode=TwoWay}" />
                                    <TextBox Grid.Row="4" Grid.Column="2"
                                             Margin="0"
                                             Background="Transparent" BorderThickness="0,0,0,1"
                                             Text="{Binding Green, Mode=TwoWay, StringFormat=\{0:F2\}}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>

                                    <TextBlock Grid.Row="5" Grid.Column="0"
                                               Margin="0,0,5,0" VerticalAlignment="Center">
                                        <Run Text="B" />
                                    </TextBlock>
                                    <Slider Grid.Row="5" Grid.Column="1"
                                            Margin="0,0,5,0" VerticalAlignment="Center"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05"
                                            Value="{Binding Blue, Mode=TwoWay}" />
                                    <TextBox Grid.Row="5" Grid.Column="2"
                                             Margin="0"
                                             Background="Transparent" BorderThickness="0,0,0,1"
                                             Text="{Binding Blue, Mode=TwoWay, StringFormat=\{0:F2\}}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                </Grid>

                                <DockPanel Grid.Row="1" Grid.Column="1"
                                           Height="25"
                                           Margin="0,5,10,5">
                                    <TextBlock Margin="0,0,5,0" VerticalAlignment="Center"
                                               DockPanel.Dock="Left">
                                        <Run Text="A" />
                                    </TextBlock>
                                    <TextBox Width="50"
                                             Margin="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                             Background="Transparent"
                                             BorderBrush="{DynamicResource T1Brush}"
                                             BorderThickness="0,0,0,1" DockPanel.Dock="Right"
                                             Text="{Binding Alpha, Mode=TwoWay, StringFormat=\{0:F2\}}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <Slider Margin="0,0,5,0" VerticalAlignment="Center"
                                            LargeChange="0.1" Maximum="1" SmallChange="0.05"
                                            Value="{Binding Alpha, Mode=TwoWay}" />
                                </DockPanel>
                            </Grid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Swatches" />
                    <TabItem Header="Stroke">
                        <Grid>
                            <Grid Margin="0,8">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <TextBlock Margin="16,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" Text="Width:" />

                                <TextBox Grid.Row="0" Grid.Column="1"
                                         Margin="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         BorderThickness="0,0,0,1"
                                         Text="{Binding FillPicker.StrokeInfo.Width, Mode=TwoWay, Converter={StaticResource DistanceConverter}}">
                                    <i:Interaction.Behaviors>
                                        <utility:TextBoxEnterBehavior />
                                    </i:Interaction.Behaviors>
                                </TextBox>

                                <TextBlock Grid.Row="0" Grid.Column="2"
                                           Margin="16,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" Text="Style:" />

                                <UniformGrid Grid.Row="0" Grid.Column="3"
                                             Margin="0"
                                             Columns="2">
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center"
                                                 GroupName="strokeDashStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.HasDashes, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconStrokeSolid}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center"
                                                 GroupName="strokeDashStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.HasDashes, Converter={StaticResource Inverter}, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconStrokeDashed}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                </UniformGrid>

                                <TextBlock Grid.Row="1" Grid.Column="0"
                                           Margin="16,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" Text="End:" />

                                <UniformGrid Grid.Row="1" Grid.Column="1"
                                             Margin="0,8,0,0"
                                             Columns="3">
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center"
                                                 GroupName="strokeEndStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.LineCap, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:LineCap.Butt}, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconEndFlat}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                                 GroupName="strokeEndStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.LineCap, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:LineCap.Square}, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconEndSquare}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center"
                                                 GroupName="strokeEndStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.LineCap, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:LineCap.Round}, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconEndRound}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                </UniformGrid>

                                <TextBlock Grid.Row="1" Grid.Column="2"
                                           Margin="16,8,16,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" Text="Corner:" />

                                <UniformGrid Grid.Row="1" Grid.Column="3"
                                             Margin="0,8,0,0"
                                             Columns="3">
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                                 GroupName="strokeJoinStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.LineJoin, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:LineJoin.Miter}, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconCornerMiter}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                                 GroupName="strokeEndStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.LineJoin, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:LineJoin.Bevel}, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconCornerBevel}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                    <RadioButton Width="Auto" Height="25.6"
                                                 Padding="0" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                                 GroupName="strokeEndStyle"
                                                 IsChecked="{Binding FillPicker.StrokeInfo.LineJoin, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:LineJoin.Round}, Mode=TwoWay}"
                                                 Style="{StaticResource ToolbarButton}">
                                        <control:SvgImage Source="{DynamicResource IconCornerRound}" Style="{DynamicResource Icon}" />
                                    </RadioButton>
                                </UniformGrid>

                                <TextBlock Grid.Row="2" Grid.Column="0"
                                           Margin="16,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" Text="Miter:" />

                                <TextBox Grid.Row="2" Grid.Column="1"
                                         Margin="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                         BorderThickness="0,0,0,1"
                                         Text="{Binding FillPicker.StrokeInfo.MiterLimit, Mode=TwoWay, Converter={StaticResource DistanceConverter}}">
                                    <i:Interaction.Behaviors>
                                        <utility:TextBoxEnterBehavior />
                                    </i:Interaction.Behaviors>
                                </TextBox>

                                <TextBlock Grid.Row="3" Grid.Column="0"
                                           Margin="16,0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           DockPanel.Dock="Left" Text="Dashes:" />

                                <UniformGrid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="3"
                                             Margin="0,8,0,0"
                                             Columns="4">
                                    <TextBox Margin="0,0,16,0" Text="{Binding FillPicker.StrokeDashes[0], Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <TextBox Margin="0,0,16,0" Text="{Binding FillPicker.StrokeDashes[1], Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <TextBox Margin="0,0,16,0" Text="{Binding FillPicker.StrokeDashes[2], Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <TextBox Margin="0,0,16,0" Text="{Binding FillPicker.StrokeDashes[3], Mode=TwoWay}">
                                        <i:Interaction.Behaviors>
                                            <utility:TextBoxEnterBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                </UniformGrid>
                            </Grid>
                        </Grid>
                    </TabItem>
                </TabControl>
                <TabControl Grid.Row="1" utility:Helper.Accent="{DynamicResource TA1}">
                    <TabItem Header="Layers">
                        <TreeView x:Name="LayerTree"
                                  Padding="0"
                                  Background="{DynamicResource L1Brush}"
                                  BorderThickness="0"
                                  ItemsSource="{Binding ViewManager.Root.SubLayers}">
                            <TreeView.Resources>
                                <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Height" Value="12" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Width="12" Height="12"
                                                        Background="Transparent">
                                                    <control:SvgImage x:Name="ExpandPath"
                                                                      Width="12" Height="12"
                                                                      Cursor="Hand" RenderTransformOrigin="0.5,0.5"
                                                                      Source="{DynamicResource IconExpander}"
                                                                      Style="{StaticResource Icon}">
                                                        <control:SvgImage.RenderTransform>
                                                            <RotateTransform Angle="-90" />
                                                        </control:SvgImage.RenderTransform>
                                                    </control:SvgImage>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                            <Setter.Value>
                                                                <RotateTransform Angle="-45" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="12" />
                                </Style>
                            </TreeView.Resources>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectLayerCommand, Mode=OneWay}" CommandParameter="{Binding SelectedValue, ElementName=LayerTree, Mode=OneWay}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type model:ILayer}" ItemsSource="{Binding SubLayers}">
                                    <TextBlock x:Name="layerName"
                                               FontWeight="Bold"
                                               Text="{Binding Name}" />
                                    <HierarchicalDataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                                            <Setter TargetName="layerName" Property="FontWeight" Value="Normal" />
                                            <Setter TargetName="layerName" Property="Text" Value="{Binding DefaultName, StringFormat=(\{0\})}" />
                                        </DataTrigger>
                                    </HierarchicalDataTemplate.Triggers>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="Background" Value="{DynamicResource L1Brush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource T1Brush}" />
                                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                                    <Setter Property="Padding" Value="0,10,0,0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                <Border x:Name="Bd"
                                                        Margin="-19,0,0,0"
                                                        Padding="{TemplateBinding Padding}"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        SnapsToDevicePixels="true">
                                                    <Grid Margin="19,0,0,0" VerticalAlignment="Center">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" MinWidth="19" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="19" />
                                                        </Grid.ColumnDefinitions>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition />
                                                        </Grid.RowDefinitions>
                                                        <ToggleButton x:Name="Expander"
                                                                      ClickMode="Press"
                                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                                      Style="{StaticResource ExpandCollapseToggleStyle}" />

                                                        <Separator Grid.ColumnSpan="3"
                                                                   Margin="0,0,0,-10" VerticalAlignment="Bottom" />

                                                        <ContentPresenter x:Name="PART_Header"
                                                                          Grid.Column="1"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          ContentSource="Header"
                                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                                        <CheckBox Grid.Column="2" IsChecked="{Binding Visible}" />

                                                        <ItemsPresenter x:Name="ItemsHost"
                                                                        Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
                                                                        Margin="0,10,0,0" />

                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsExpanded" Value="false">
                                                        <Setter Property="Padding" Value="0,10" />
                                                        <Setter TargetName="ItemsHost" Property="Margin" Value="0" />
                                                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                                    </Trigger>
                                                    <Trigger Property="HasItems" Value="false">
                                                        <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding Selected}" Value="true">
                                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource L2Brush}" />
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                                    <Style.Triggers>
                                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                                            <Setter Property="ItemsPanel">
                                                <Setter.Value>
                                                    <ItemsPanelTemplate>
                                                        <VirtualizingStackPanel />
                                                    </ItemsPanelTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <!--<i:Interaction.Behaviors>
                                    <view:TreeViewMultipleSelectionBehavior SelectedItems="{Binding Selection}" />
                                </i:Interaction.Behaviors>-->
                        </TreeView>
                    </TabItem>
                    <TabItem Header="Effects" />
                </TabControl>
                <TabControl Grid.Row="2" utility:Helper.Accent="{DynamicResource TA3}">
                    <control:Pane DataContext="{Binding TransformViewModel}"
                                  Header="Transform" Source="Ibinimator;component/View/Panes/TransformPane.xaml" />

                    <control:Pane DataContext="{Binding HistoryManager}"
                                  Header="History" Source="Ibinimator;component/View/Panes/HistoryPane.xaml" />
                </TabControl>
            </Grid>
            <StatusBar Grid.Row="1" Grid.Column="1"
                       Height="25">
                <TextBlock utility:TextBlockHelper.FormattedText="{Binding ArtContext.Status.Message, Mode=OneWay}">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Info">
                                    <Setter Property="Foreground" Value="{DynamicResource T1Brush}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Error">
                                    <Setter Property="Foreground" Value="{DynamicResource TEBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StatusBar>
        </Grid>
    </Grid>
</Window>