<Window x:Class="Rain.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:control="clr-namespace:Rain.View.Control" xmlns:core="clr-namespace:Rain.Core;assembly=Rain.Core"
        xmlns:coremodel="clr-namespace:Rain.Core.Model;assembly=Rain.Core"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:documentGraph="clr-namespace:Rain.Core.Model.DocumentGraph;assembly=Rain.Core"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:utility="clr-namespace:Rain.View.Utility" xmlns:viewmodel="clr-namespace:Rain.ViewModel"
        Title="Rain Animator 2D"
        d:DesignHeight="1080" d:DesignWidth="1920" Background="Transparent"
        Icon="/Rain;component/Resources/logo.png" WindowState="Maximized"
        mc:Ignorable="d">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30" CornerRadius="5" ResizeBorderThickness="5"
                      UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>
    <utility:Helper.InputBindingSource>
        <Binding Path="Shortcuts" />
    </utility:Helper.InputBindingSource>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Style.Triggers>
                <Trigger Property="WindowState" Value="Maximized">
                    <Setter Property="BorderThickness" Value="7" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <d:Window.DataContext>
        <viewmodel:MainViewModel />
    </d:Window.DataContext>

    <Grid Background="Transparent">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="48" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="36" />
            <RowDefinition Height="48" />
            <RowDefinition Height="36" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.RowSpan="4" Grid.Column="0"
              Panel.ZIndex="99">
            <Grid.Background>
                <SolidColorBrush Opacity="0.75" Color="{utility:Theme color(background-1-inverse)}" />
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition Height="120" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Image Width="24"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   RenderOptions.BitmapScalingMode="HighQuality" SnapsToDevicePixels="True"
                   Source="/Rain;component/Resources/logo.png" />

            <ToolBarTray Grid.Row="1" Orientation="Vertical">
                <ToolBar VerticalAlignment="Stretch">
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Select}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}" ToolTip="Select">
                        <control:Icon IconName="tool-select" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Node}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}" ToolTip="Node">
                        <control:Icon IconName="tool-node" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Pencil}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}" ToolTip="Pencil">
                        <control:Icon IconName="tool-pencil" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False" Style="{StaticResource ToolbarButton}"
                                 ToolTip="Pen">
                        <control:Icon IconName="tool-pen" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Text}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}" ToolTip="Text">
                        <control:Icon IconName="tool-text" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False" Style="{StaticResource ToolbarButton}"
                                 ToolTip="Color Picker">
                        <control:Icon IconName="tool-eyedropper" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False" Style="{StaticResource ToolbarButton}"
                                 ToolTip="Flood">
                        <control:Icon IconName="tool-flood" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool"
                                 IsChecked="{Binding ToolManager.Type, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static coremodel:ToolType.Gradient}, Mode=TwoWay}"
                                 Style="{StaticResource ToolbarButton}" ToolTip="Gradient">
                        <control:Icon IconName="tool-gradient" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False" Style="{StaticResource ToolbarButton}"
                                 ToolTip="Keyframe">
                        <control:Icon IconName="tool-keyframe" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False" Style="{StaticResource ToolbarButton}"
                                 ToolTip="Mask">
                        <control:Icon IconName="tool-mask" Inverted="True" />
                    </RadioButton>
                    <RadioButton GroupName="selectedTool" IsEnabled="False" Style="{StaticResource ToolbarButton}"
                                 ToolTip="Zoom">
                        <control:Icon IconName="tool-zoom" Inverted="True" />
                    </RadioButton>
                </ToolBar>
            </ToolBarTray>
        </Grid>
        <Border Grid.Row="0" Grid.Column="1"
                Background="{utility:Theme background-2}">
            <Grid UseLayoutRounding="True">
                <Menu Margin="18,0,0,0" VerticalAlignment="Center"
                      Background="Transparent" ItemsSource="{Binding MenuItems}">
                    <Menu.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Command" Value="{Binding Command}" />
                            <Setter Property="CommandParameter" Value="{Binding ArtContext}" />
                            <Setter Property="FontSize" Value="12" />
                            <Setter Property="InputGestureText" Value="{Binding Shortcut}" />
                            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Type}" Value="{x:Static viewmodel:MenuItemType.Separator}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Separator Margin="0,4"
                                                           BorderBrush="{utility:Theme divider}" BorderThickness="1" Opacity="0.25" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Menu.ItemContainerStyle>
                    <Menu.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type viewmodel:MenuItem}" ItemsSource="{Binding Path=SubMenus}">
                            <Grid>
                                <TextBlock Text="{Binding Name}" />
                            </Grid>
                        </HierarchicalDataTemplate>
                    </Menu.ItemTemplate>
                </Menu>
                <StackPanel HorizontalAlignment="Right"
                            Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                    <Button Height="30"
                            Padding="12,6"
                            Command="{x:Static SystemCommands.MinimizeWindowCommand}" Style="{StaticResource ToolbarButton}">
                        <control:Icon IconName="icon-minimize" />
                    </Button>
                    <Button Height="30"
                            Padding="12,6"
                            Command="{x:Static SystemCommands.RestoreWindowCommand}" Style="{StaticResource ToolbarButton}">
                        <control:Icon IconName="icon-restore" />
                    </Button>
                    <Button Height="30"
                            Padding="12,6"
                            Command="{x:Static SystemCommands.CloseWindowCommand}" Style="{StaticResource ToolbarButton}">
                        <control:Icon IconName="icon-close" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <ToolBar Grid.Row="1" Grid.Column="1"
                 Padding="12,0,0,0"
                 Background="{utility:Theme background-1}" ItemsSource="{Binding ToolbarItems}">
            <ToolBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ToolBar.ItemsPanel>
            <ToolBar.ItemTemplateSelector>
                <utility:EnumDataTemplateSelector PropertyName="Type">
                    <DataTemplate x:Key="{x:Static viewmodel:ToolbarItemType.Button}" DataType="{x:Type viewmodel:ToolbarItem}">
                        <Button Command="{Binding Command}" CommandParameter="{Binding ArtContext}" Style="{StaticResource ToolbarButton}"
                                ToolTip="{Binding Name}">
                            <control:Icon IconName="{Binding Icon}" />
                        </Button>
                    </DataTemplate>
                    <DataTemplate x:Key="{x:Static viewmodel:ToolbarItemType.Space}" DataType="{x:Type viewmodel:ToolbarItem}">
                        <Border Width="50" />
                    </DataTemplate>
                </utility:EnumDataTemplateSelector>
            </ToolBar.ItemTemplateSelector>
        </ToolBar>
        <StackPanel Grid.Row="2" Grid.Column="1"
                    Background="{utility:Theme background-3}" Orientation="Horizontal">
            <TextBlock Margin="24,0" VerticalAlignment="Center"
                       DockPanel.Dock="Left" FontWeight="Bold" Text="{Binding ToolManager.Tool.Type}" />
            <ItemsControl utility:Helper.Accent="{utility:Theme color(accent-4-inverse)}" ItemsSource="{Binding ToolManager.Tool.Options}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplateSelector>
                    <utility:EnumDataTemplateSelector PropertyName="Type">
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Dropdown}" DataType="{x:Type core:ToolOption`1}">
                            <StackPanel Margin="8,0" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Label}" /><Run Text=":" />
                                </TextBlock>
                                <ComboBox Margin="8,0"
                                          utility:Helper.Accent="{utility:Theme color(accent-4)}" ItemsSource="{Binding Values}"
                                          SelectedValue="{Binding Value}">
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Segment}" DataType="{x:Type core:ToolOption`1}">
                            <StackPanel Margin="16,0" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Label}" /><Run Text=":" />
                                </TextBlock>
                                <control:SegmentButton Margin="8,0"
                                                       utility:Helper.Accent="{utility:Theme color(accent-4)}" ItemsSource="{Binding Values}"
                                                       SelectedValue="{Binding Value}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Font}" DataType="{x:Type core:ToolOption`1}">
                            <StackPanel Margin="8,0" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Label}" /><Run Text=":" />
                                </TextBlock>
                                <ComboBox Margin="8,0"
                                          utility:Helper.Accent="{utility:Theme color(accent-4)}" ItemsSource="{Binding Values}"
                                          SelectedValue="{Binding Value}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock FontFamily="{Binding}" Text="{Binding}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Length}" DataType="{x:Type core:ToolOption`1}">
                            <StackPanel Margin="16,0" Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Label}" /><Run Text=":" />
                                </TextBlock>
                                <ComboBox x:Name="Dropdown"
                                          Margin="8,0"
                                          IsEditable="True" ItemsSource="{Binding Values}">
                                    <ComboBox.Text>
                                        <MultiBinding Converter="{StaticResource PointConverter}" UpdateSourceTrigger="LostFocus">
                                            <Binding Path="Value" />
                                            <Binding Mode="OneWay" Path="Unit" />
                                        </MultiBinding>
                                    </ComboBox.Text>
                                </ComboBox>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate x:Key="{x:Static coremodel:ToolOptionType.Button}" DataType="{x:Type core:ToolOption`1}">
                            <Button Margin="4" Padding="8,0"
                                    DataContext="{Binding}">
                                <Button.Resources>
                                    <utility:BindingProxy x:Key="hack" Data="{Binding}" />
                                </Button.Resources>
                                <Button.Command>
                                    <viewmodel:BindableDelegateCommand Action="{Binding Data.Value, Mode=OneWay, Source={StaticResource hack}}" />
                                </Button.Command>
                                <StackPanel Orientation="Horizontal">
                                    <control:Icon Width="12" Height="12"
                                                  Margin="4,0"
                                                  IconName="{Binding Icon}" />
                                    <TextBlock Text="{Binding Label}" />
                                </StackPanel>
                            </Button>
                        </DataTemplate>
                    </utility:EnumDataTemplateSelector>
                </ItemsControl.ItemTemplateSelector>
            </ItemsControl>
        </StackPanel>
        <Grid Grid.Row="3" Grid.Column="1"
              Background="{utility:Theme background-3}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="384" />
            </Grid.ColumnDefinitions>
            <TabControl Background="Transparent">
                <TabItem Background="White">
                    <control:ArtView x:Name="ArtView" AllowDrop="True" />
                </TabItem>
            </TabControl>
            <GridSplitter Grid.Row="0" Grid.Column="1"
                          Width="5"
                          Background="Transparent" />
            <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TabControl utility:Helper.Accent="{utility:Theme color(accent-2-inverse)}">
                    <control:Pane DataContext="{Binding ColorViewModel}" Header="Fill" Source="Rain;component/View/Panes/ColorPane.xaml" />
                    <TabItem Header="Swatches" />
                    <control:Pane DataContext="{Binding StrokeViewModel}" Header="Stroke" Source="Rain;component/View/Panes/StrokePane.xaml" />
                </TabControl>
                <TabControl Grid.Row="1" utility:Helper.Accent="{utility:Theme color(accent-1-inverse)}">
                    <control:Pane DataContext="{Binding ViewManager}" Header="Layers" Source="Rain;component/View/Panes/LayerPane.xaml" />
                    <TabItem Header="Effects" />
                </TabControl>
                <TabControl Grid.Row="2" utility:Helper.Accent="{utility:Theme color(accent-3-inverse)}">
                    <control:Pane DataContext="{Binding TransformViewModel}" Header="Transform"
                                  Source="Rain;component/View/Panes/TransformPane.xaml" />

                    <control:Pane DataContext="{Binding HistoryManager}" Header="History" Source="Rain;component/View/Panes/HistoryPane.xaml" />
                </TabControl>
            </Grid>
            <StatusBar Grid.Row="1" Grid.Column="0"
                       Height="25"
                       HorizontalContentAlignment="Stretch">
                <StatusBar.Background>
                    <SolidColorBrush x:Name="StatusBarBackground" Opacity="0.25" />
                </StatusBar.Background>
                <StatusBar.Resources>
                    <Storyboard x:Key="ErrorAnimation"
                                Storyboard.Target="{x:Reference StatusBarBackground}" Storyboard.TargetProperty="Color">
                        <ColorAnimation To="{utility:Theme color(accent-error)}" Duration="0:0:0.125" />
                        <ColorAnimation To="Transparent" Duration="0:0:2.5" />
                    </Storyboard>
                    <Storyboard x:Key="SuccessAnimation"
                                Storyboard.Target="{x:Reference StatusBarBackground}" Storyboard.TargetProperty="Color">
                        <ColorAnimation To="{utility:Theme color(accent-success)}" Duration="0:0:0.125" />
                        <ColorAnimation To="Transparent" Duration="0:0:2.5">
                            <ColorAnimation.EasingFunction>
                                <QuarticEase EasingMode="EaseIn" />
                            </ColorAnimation.EasingFunction>
                        </ColorAnimation>
                    </Storyboard>
                </StatusBar.Resources>
                <StatusBar.Style>
                    <Style BasedOn="{StaticResource {x:Type StatusBar}}" TargetType="StatusBar">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Error">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ErrorAnimation}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Warning">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ErrorAnimation}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Success">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SuccessAnimation}" />
                                </DataTrigger.EnterActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBar.Style>

                <TextBlock utility:TextBlockHelper.FormattedText="{Binding ArtContext.Status.Message, Mode=OneWay}" DockPanel.Dock="Left">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Info">
                                    <Setter Property="Foreground" Value="{utility:Theme text-1}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Error">
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                    <Setter Property="Foreground" Value="{utility:Theme accent-error}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Warning">
                                    <Setter Property="Foreground" Value="{utility:Theme accent-error}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ArtContext.Status.Type}" Value="Success">
                                    <Setter Property="FontWeight" Value="SemiBold" />
                                    <Setter Property="Foreground" Value="{utility:Theme accent-success}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <TextBlock Margin="16,0" HorizontalAlignment="Right"
                           Text="{Binding FrameTime, ElementName=ArtView, StringFormat=Frame Time: {0:F2}ms}" />
            </StatusBar>
        </Grid>
    </Grid>
</Window>