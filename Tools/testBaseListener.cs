//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from test.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ItestListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class testBaseListener : ItestListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.transformlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTransformlist([NotNull] testParser.TransformlistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.transformlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTransformlist([NotNull] testParser.TransformlistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.transforms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTransforms([NotNull] testParser.TransformsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.transforms"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTransforms([NotNull] testParser.TransformsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.transform"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTransform([NotNull] testParser.TransformContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.transform"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTransform([NotNull] testParser.TransformContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.matrix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMatrix([NotNull] testParser.MatrixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.matrix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMatrix([NotNull] testParser.MatrixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.translate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTranslate([NotNull] testParser.TranslateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.translate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTranslate([NotNull] testParser.TranslateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.scale"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScale([NotNull] testParser.ScaleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.scale"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScale([NotNull] testParser.ScaleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.rotate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRotate([NotNull] testParser.RotateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.rotate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRotate([NotNull] testParser.RotateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.skewX"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkewX([NotNull] testParser.SkewXContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.skewX"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkewX([NotNull] testParser.SkewXContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.skewY"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkewY([NotNull] testParser.SkewYContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.skewY"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkewY([NotNull] testParser.SkewYContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] testParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] testParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.commawsp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommawsp([NotNull] testParser.CommawspContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.commawsp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommawsp([NotNull] testParser.CommawspContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.comma"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComma([NotNull] testParser.CommaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.comma"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComma([NotNull] testParser.CommaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.integer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInteger([NotNull] testParser.IntegerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.integer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInteger([NotNull] testParser.IntegerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.float"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloat([NotNull] testParser.FloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.float"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloat([NotNull] testParser.FloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.fraction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFraction([NotNull] testParser.FractionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.fraction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFraction([NotNull] testParser.FractionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.exponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExponent([NotNull] testParser.ExponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.exponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExponent([NotNull] testParser.ExponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSign([NotNull] testParser.SignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.sign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSign([NotNull] testParser.SignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.digits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigits([NotNull] testParser.DigitsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.digits"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigits([NotNull] testParser.DigitsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.digit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDigit([NotNull] testParser.DigitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.digit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDigit([NotNull] testParser.DigitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.wsp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWsp([NotNull] testParser.WspContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.wsp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWsp([NotNull] testParser.WspContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
