//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from test.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="testParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface ItestListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.transformlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransformlist([NotNull] testParser.TransformlistContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.transformlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransformlist([NotNull] testParser.TransformlistContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.transforms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransforms([NotNull] testParser.TransformsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.transforms"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransforms([NotNull] testParser.TransformsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.transform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransform([NotNull] testParser.TransformContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.transform"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransform([NotNull] testParser.TransformContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.matrix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatrix([NotNull] testParser.MatrixContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.matrix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatrix([NotNull] testParser.MatrixContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.translate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTranslate([NotNull] testParser.TranslateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.translate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTranslate([NotNull] testParser.TranslateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.scale"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScale([NotNull] testParser.ScaleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.scale"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScale([NotNull] testParser.ScaleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.rotate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRotate([NotNull] testParser.RotateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.rotate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRotate([NotNull] testParser.RotateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.skewX"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSkewX([NotNull] testParser.SkewXContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.skewX"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSkewX([NotNull] testParser.SkewXContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.skewY"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSkewY([NotNull] testParser.SkewYContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.skewY"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSkewY([NotNull] testParser.SkewYContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] testParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] testParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.commawsp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommawsp([NotNull] testParser.CommawspContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.commawsp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommawsp([NotNull] testParser.CommawspContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.comma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComma([NotNull] testParser.CommaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.comma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComma([NotNull] testParser.CommaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteger([NotNull] testParser.IntegerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.integer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteger([NotNull] testParser.IntegerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloat([NotNull] testParser.FloatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloat([NotNull] testParser.FloatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.fraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFraction([NotNull] testParser.FractionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.fraction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFraction([NotNull] testParser.FractionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.exponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponent([NotNull] testParser.ExponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.exponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponent([NotNull] testParser.ExponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSign([NotNull] testParser.SignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.sign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSign([NotNull] testParser.SignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.digits"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDigits([NotNull] testParser.DigitsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.digits"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDigits([NotNull] testParser.DigitsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.digit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDigit([NotNull] testParser.DigitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.digit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDigit([NotNull] testParser.DigitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="testParser.wsp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWsp([NotNull] testParser.WspContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="testParser.wsp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWsp([NotNull] testParser.WspContext context);
}
